(window.webpackJsonp=window.webpackJsonp||[]).push([[276],{690:function(t,s,a){"use strict";a.r(s);var n=a(62),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"书写友好的提交信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#书写友好的提交信息"}},[t._v("#")]),t._v(" 书写友好的提交信息")]),t._v(" "),a("p",[t._v("在书写提交信息时，让其变得人机可读是非常重要的。规范的提交信息对代码 CR 和问题定位等都很有帮助，尤其是在团队协作中，显得更为重要。")]),t._v(" "),a("h2",{attrs:{id:"规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#规范"}},[t._v("#")]),t._v(" 规范")]),t._v(" "),a("p",[t._v("开源社区已经为我们总结出了一种用于给提交信息增加人机可读含义的规范，其名 "),a("a",{attrs:{href:"https://www.conventionalcommits.org/en/v1.0.0/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Conventional Commits"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("p",[t._v("规范中推荐提交消息的结构应如下所示：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("optional scope"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("description"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("optional body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("optional footer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v("其中开头部分表明了本次提交的类型（是添加功能还是修复错误等），范围则描述了修改的影响面，然后是一段简要的描述，更多详细的信息则可以在正文中进行描述。")]),t._v(" "),a("p",[t._v("最后在可选的脚注中还可以添加额外的内容，比如指明是否是一次破坏性变更，关联的任务卡片等。")]),t._v(" "),a("h2",{attrs:{id:"交互式提交"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#交互式提交"}},[t._v("#")]),t._v(" 交互式提交")]),t._v(" "),a("p",[t._v("刚开始遵循规范提交信息时，我们对要求可能会比较陌生，不知道存在哪些选项，应该怎样选择，因此提供交互式的提交方式是有必要的。")]),t._v(" "),a("p",[t._v("编写符合提交规范的提交消息的常用交互式工具包是 "),a("a",{attrs:{href:"https://github.com/commitizen/cz-cli",target:"_blank",rel:"noopener noreferrer"}},[t._v("commitizen"),a("OutboundLink")],1),t._v("，当你使用它进行提交时系统将提示你需要填写的所有必需提交字段。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -D commitizen\n")])])]),a("p",[t._v("它提供了一个 "),a("code",[t._v("git-cz")]),t._v(" 命令，用于代替 "),a("code",[t._v("git commit")]),t._v(" 进行提交。")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// package.json")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"commit"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"npx git-cz"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("默认情况下它会将 "),a("a",{attrs:{href:"https://github.com/streamich/git-cz",target:"_blank",rel:"noopener noreferrer"}},[t._v("streamich/git-cz"),a("OutboundLink")],1),t._v(" 作为 Adapter 进行询问，你可以通过配置指定你需要的 Adapter，以 "),a("a",{attrs:{href:"https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#-git-commit-guidelines",target:"_blank",rel:"noopener noreferrer"}},[t._v("AngularJS's commit message convention"),a("OutboundLink")],1),t._v(" 为例：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -D cz-conventional-changelog\n")])])]),a("p",[t._v("配置：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// package.json")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"config"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"commitizen"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"path"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cz-conventional-changelog"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("指定的 "),a("code",[t._v("commitizen.path")]),t._v(" 将通过 "),a("code",[t._v("require.resolve")]),t._v(" 加载，同时支持：")]),t._v(" "),a("ul",[a("li",[t._v("Npm 模块；")]),t._v(" "),a("li",[t._v("相对于 "),a("code",[t._v("process.cwd()")]),t._v(" 包含 "),a("code",[t._v("index.js")]),t._v(" 文件的目录；")]),t._v(" "),a("li",[t._v("相对于 "),a("code",[t._v("process.cwd()")]),t._v(" 的 "),a("code",[t._v(".js")]),t._v(" 文件；")]),t._v(" "),a("li",[t._v("完整的相对文件名；")]),t._v(" "),a("li",[t._v("绝对路径。")])]),t._v(" "),a("p",[t._v("更多配置可点击"),a("a",{attrs:{href:"https://github.com/commitizen/cz-conventional-changelog#configuration",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看更多"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"校验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#校验"}},[t._v("#")]),t._v(" 校验")]),t._v(" "),a("p",[t._v("和 ESLint 一样的是，"),a("a",{attrs:{href:"https://github.com/conventional-changelog/commitlint",target:"_blank",rel:"noopener noreferrer"}},[t._v("commitlint"),a("OutboundLink")],1),t._v(" 自身只提供了检测的功能和一些最基础的规则。使用者需要根据这些规则配置出自己的规范。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Install commitlint cli and conventional config")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# @commitlint/config-conventional 规定了遵循上述的 Conventional Commits 规范")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -D @commitlint/cli @commitlint/config-conventional\n")])])]),a("p",[t._v("安装完成后需要在配置文件中（"),a("code",[t._v("commitlint.config.js")]),t._v(" 或 "),a("code",[t._v(".commitlintrc.js")]),t._v(" 或 "),a("code",[t._v(".commitlintrc.json")]),t._v(" 或 "),a("code",[t._v(".commitlintrc.yml")]),t._v("）或 "),a("code",[t._v("package.json")]),t._v(" 文件中的 "),a("code",[t._v("commitlint")]),t._v(" 字段进行配置。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"module.exports = {extends: ['@commitlint/config-conventional']};\"")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" commitlint.config.js\n")])])]),a("p",[t._v("同时它也提供了 "),a("code",[t._v("@commitlint/prompt-cli")]),t._v(" 包以便快速快速编写提交消息，并确保它们符合配置中的提交约定。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i -D @commitlint/prompt-cli\n")])])]),a("p",[a("code",[t._v("@commitlint/prompt-cli")]),t._v(" 的使用也很简单，安装它并使用它提供的 "),a("code",[t._v("commit")]),t._v(" 命令进行提交即可。")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"commit"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commit"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("不过相对而言 "),a("code",[t._v("commitizen")]),t._v(" 表现更优，支持自定义不同的 Adapter，所以更多时候大家会使用后者。commitlint 官方也基于 cz-conventional-changelog 提供一个名为 @commitlint/cz-commitlint 的 Adapter。")]),t._v(" "),a("h2",{attrs:{id:"git-hooks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-hooks"}},[t._v("#")]),t._v(" Git Hooks")]),t._v(" "),a("p",[t._v("有时候我们可能会忘记校验提交信息，因此可以将其自动化，当我们提交时自动校验，"),a("code",[t._v("husky")]),t._v(" 可以很好的做到这点。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装包")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -D husky\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开启 Git hooks")]),t._v("\nnpx husky "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n")])])]),a("p",[t._v("为了让其它同学在开发时也能够自动校验，同时在 "),a("code",[t._v("package.json")]),t._v(" 文件中配置安装后自动启用 Git 挂钩：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" pkg "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" scripts.prepare "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"husky install"')]),t._v("\n")])])]),a("p",[t._v("通过 "),a("code",[t._v("husky")]),t._v(" 我们可以很容易的使用 Git hooks 对我们的提交信息进行校验。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("npx husky "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" .husky/commit-msg "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'npx --no -- commitlint --edit \"$1\"'")]),t._v("\n")])])]),a("p",[t._v("对于 Windows 用户，如果在运行 "),a("code",[t._v("npx husky add ...")]),t._v(" 时看到帮助消息，请尝试 "),a("code",[t._v("node node_modules/.bin/husky add ...")]),t._v(" 代替。")]),t._v(" "),a("h2",{attrs:{id:"changelog"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#changelog"}},[t._v("#")]),t._v(" CHANGELOG")]),t._v(" "),a("p",[t._v("使用约定式提交的一个好处就是可以自动化生成 CHANGELOG，"),a("code",[t._v("standard-version")]),t._v(" 常用于完成此项工作。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -D standard-version\n")])])]),a("p",[t._v("接着在 "),a("code",[t._v("package.json")]),t._v(" 中配置一个脚本命令：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"release"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"standard-version"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("当你第一次生成 CHANGELOG 时可以添加 "),a("code",[t._v("--first-release")]),t._v(" 选项，这将会标记当前版本，而不会改变 "),a("code",[t._v("package.json")]),t._v(" 文件中的版本字段。")]),t._v(" "),a("p",[t._v("更多命令或选项：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 假设你的项目的当前版本是 1.0.0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用 --pre-releases 生成 pre-release 标志")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" run release --prerelease "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1.0.0 -> 1.0.1-0; one more time: 1.0.1-0 -> 1.0.1-1")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果要命名预发行版，可以通过 --prerelease <name> 指定名称")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" run release --prerelease alpha "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1.0.0 -> 1.0.1-alpha.0")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 通过 --release-as 选项升级指定位的版本号")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 你也可以同时 -prerelease 选项一起使用")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" run release --release-as major "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1.0.0 -> 2.0.0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" run release --release-as minor "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1.0.0 -> 1.1.0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" run release --release-as patch "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1.0.0 -> 1.0.1")]),t._v("\n")])])]),a("p",[t._v("看起来和 "),a("code",[t._v("npm version")]),t._v(" 的功能很像吧？是的，你完全可以使用 "),a("code",[t._v("standard-version")]),t._v(" 代替 "),a("code",[t._v("npm version")]),t._v(" 命令了。")]),t._v(" "),a("p",[t._v("另外，你还可以通过配置文件（.versionrc, .versionrc.json 或 .versionrc.js）对其进行配置，配置规范可以参考"),a("a",{attrs:{href:"https://github.com/conventional-changelog/conventional-changelog-config-spec/",target:"_blank",rel:"noopener noreferrer"}},[t._v("conventional-changelog-config-spec"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("以上我们介绍了提交信息的规范，以及怎样才能方便大家进行书写和校验，下面总结了基础配置的命令清单：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 支持交互式提交")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -D commitizen @commitlint/cz-commitlint\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" pkg "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" config.commitizen.path "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@commitlint/cz-commitlint"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 支持规范校验")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -D @commitlint/cli @commitlint/config-conventional\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" pkg "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" config.commitlint.extends "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@commitlint/config-conventional"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配合 Git hooks 自动校验")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -D husky\nnpx husky "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" pkg "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" scripts.prepare "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"husky install"')]),t._v("\nnpx husky "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" .husky/commit-msg "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'npx --no -- commitlint --edit \"$1\"'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# CHANGELOG")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -D standard-version\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" pkg "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" scripts.release "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"standard-version"')]),t._v("\n")])])]),a("p",[t._v("注意上面的命令需要在 Node.js 16+ 行运行，不过你也可以根据上面的介绍手动进行安装。")]),t._v(" "),a("p",[t._v("最后书写规范的提交信息很重要，可以帮助大家进行代码 CR 和定位问题，但是否需要进行强制限制可以结合团队情况进行综合考虑，不过还是建议如此。")]),t._v(" "),a("h2",{attrs:{id:"ref"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ref"}},[t._v("#")]),t._v(" Ref")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.conventionalcommits.org/en/v1.0.0/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Conventional Commits"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit",target:"_blank",rel:"noopener noreferrer"}},[t._v("angular.js/CONTRIBUTING.md at master · angular/angular.js"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/weixin_40817115/article/details/90384398",target:"_blank",rel:"noopener noreferrer"}},[t._v("npm version 常用命令及用法示例"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5cc4694a6fb9a03238106eb9",target:"_blank",rel:"noopener noreferrer"}},[t._v("Cz 工具集使用介绍 - 规范 Git 提交说明 - 掘金"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5afc5242f265da0b7f44bee4",target:"_blank",rel:"noopener noreferrer"}},[t._v("优雅的提交你的 Git Commit Message - 掘金"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);