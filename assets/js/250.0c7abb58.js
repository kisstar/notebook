(window.webpackJsonp=window.webpackJsonp||[]).push([[250],{662:function(t,s,a){"use strict";a.r(s);var e=a(62),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"eslint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eslint"}},[t._v("#")]),t._v(" eslint")]),t._v(" "),a("p",[t._v("ESLint 是在 ECMAScript/JavaScript 代码中识别和报告模式匹配的工具，它的目标是保证代码的一致性和避免错误。与 JSLint、JSHint 不同的是：")]),t._v(" "),a("ul",[a("li",[t._v("ESLint 使用 Espree 解析 JavaScript。")]),t._v(" "),a("li",[t._v("ESLint 使用 AST 去分析代码中的模式。")]),t._v(" "),a("li",[t._v("ESLint 是完全插件化的。每一个规则都是一个插件并且你可以在运行时添加更多的规则。")])]),t._v(" "),a("h2",{attrs:{id:"基础使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础使用"}},[t._v("#")]),t._v(" 基础使用")]),t._v(" "),a("p",[t._v("安装：")]),t._v(" "),a("div",{staticClass:"language-bashh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("yarn add -D eslint\n")])])]),a("p",[t._v("生成配置文件：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("./node_modules/.bin/eslint --init\n")])])]),a("p",[t._v("你也可以全局安装，这样可以方便使用 "),a("code",[t._v("eslint")]),t._v(" 命令：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" global "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" eslint\neslint --init\n")])])]),a("p",[t._v("对 "),a("code",[t._v("demo.js")]),t._v(" 文件进行校验：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("eslint demo.js\n")])])]),a("p",[t._v("对于一个项目而言，通常会将其安装到局部（使用的任何插件或可共享配置都必须安装在本地），为了方便使用我们可以在 "),a("code",[t._v("package.json")]),t._v(" 文件中配置相应的命令：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"script"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"eslint"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint demo.js"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("现在通过 "),a("code",[t._v("npm run eslint")]),t._v(" 命令也可以对指定的文件进行校验。")]),t._v(" "),a("h2",{attrs:{id:"配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[t._v("#")]),t._v(" 配置")]),t._v(" "),a("p",[t._v("ESlint 被设计为完全可配置的，这意味着你可以关闭每一个规则而只运行基本语法验证，或混合和匹配 ESLint 默认绑定的规则和你的自定义规则。有两种主要的方式来配置 ESLint：")]),t._v(" "),a("p",[a("strong",[t._v("配置注释")]),t._v(" - 使用 JavaScript 注释将配置信息直接嵌入到文件中。譬如：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定环境")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* eslint-env node, mocha */")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定全局变量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* global var1, var2:writable */")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 配置规则")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* eslint quotes: ["error", "double"], curly: 2, "plugin1/rule1": "error" */')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 关闭/开启 检查，支持指定特定的规则")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* eslint-disable */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Business code...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* eslint-enable */")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 关闭对 当前行/下一行 的检查，支持指定特定的规则")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* eslint-disable-line */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* eslint-disable-next-line */")]),t._v("\n")])])]),a("p",[a("strong",[t._v("配置文件")]),t._v(" - 使用任一的文件（.eslintrc.js、.eslintrc.yaml、.eslintrc.yml、.eslintrc.json、.eslintrc 或在 package.json 文件中创建 eslintConfig 属性）来为全部的目录和它的子目录指定配置信息。")]),t._v(" "),a("p",[t._v("其实，通过命令行也可以传递一些配置项，具体的优先级唯配置注释最高，命令行参数次之，项目级配置文件紧随其后。如果你在你的主目录（通常 ~/）有一个配置文件，ESLint 只有在无法找到其他配置文件时才使用它。")]),t._v(" "),a("h2",{attrs:{id:"配置项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置项"}},[t._v("#")]),t._v(" 配置项")]),t._v(" "),a("p",[t._v("在配置文件中有很多信息可以配置：")]),t._v(" "),a("ul",[a("li",[t._v("Environments - 指定脚本的运行环境。每种环境都有一组特定的预定义全局变量。")]),t._v(" "),a("li",[t._v("Globals - 脚本在执行期间访问的额外的全局变量。")]),t._v(" "),a("li",[t._v("Rules - 启用的规则及其各自的错误级别。")])]),t._v(" "),a("p",[t._v("所有这些选项让你可以细粒度地控制 ESLint 如何对待你的代码。")]),t._v(" "),a("h3",{attrs:{id:"parser"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parser"}},[t._v("#")]),t._v(" Parser")]),t._v(" "),a("p",[t._v("ESLint 默认使用 "),a("a",{attrs:{href:"https://github.com/eslint/espree",target:"_blank",rel:"noopener noreferrer"}},[t._v("Espree"),a("OutboundLink")],1),t._v(" 作为其解析器，你可以在配置文件中指定一个不同的解析器，只要该解析器符合下列要求：")]),t._v(" "),a("ul",[a("li",[t._v("它必须是一个 Node 模块，可以从它出现的配置文件中加载。通常，这意味着应该使用 "),a("a",{attrs:{href:"https://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("npm"),a("OutboundLink")],1),t._v(" 单独安装解析器包。")]),t._v(" "),a("li",[t._v("它必须符合 "),a("a",{attrs:{href:"https://cn.eslint.org/docs/developer-guide/working-with-plugins#working-with-custom-parsers",target:"_blank",rel:"noopener noreferrer"}},[t._v("parser interface"),a("OutboundLink")],1),t._v("。")])]),t._v(" "),a("p",[t._v("以下解析器与 ESLint 兼容：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.npmjs.com/package/esprima",target:"_blank",rel:"noopener noreferrer"}},[t._v("Esprima"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.npmjs.com/package/babel-eslint",target:"_blank",rel:"noopener noreferrer"}},[t._v("Babel-ESLint"),a("OutboundLink")],1),t._v(" - 一个对 Babel 解析器的包装，使其能够与 ESLint 兼容。")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.npmjs.com/package/@typescript-eslint/parser",target:"_blank",rel:"noopener noreferrer"}},[t._v("@typescript-eslint/parser"),a("OutboundLink")],1),t._v(" - 将 TypeScript 转换成与 "),a("code",[t._v("estree")]),t._v(" 兼容的形式，以便在 ESLint 中使用。")])]),t._v(" "),a("p",[t._v("你可以在你的 "),a("code",[t._v(".eslintrc")]),t._v(" 文件里通过 "),a("code",[t._v("parser")]),t._v(" 选项指定要使用的解析器：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"parser"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"babel-eslint"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"parser-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parser-options"}},[t._v("#")]),t._v(" Parser Options")]),t._v(" "),a("p",[t._v("指定解析器参数。为了让 ESLint 在处理非 ECMAScript 5 特性时正常工作，配置属性 "),a("code",[t._v("parserOptions")]),t._v(" 仍然是必须的。")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"parserOption"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定要使用的 ECMAScript 版本，可以使用 6、7、8、9 或 10，默认值 5")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ecmaVersion"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置为 script(默认)或 module（如果你的代码是 ECMAScript 模块)")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sourceType"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"script"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定你想使用的额外的语言特性,所有选项默认都是 false")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ecmafeatures"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 允许在全局作用域下使用 return 语句")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"globalReturn"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 启用全局 strict 模式（严格模式）")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"impliedStrict"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 启用 JSX")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"jsx"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 启用对实验性功能的支持，详细可参考官网")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"experimentalObjectRestSpread"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("注意：使用 "),a("code",[t._v('{ "parserOptions": { "ecmaVersion": 6 } }')]),t._v(" 会开启对 ES6 语法的支持，但是对于并不意味着同时支持新的 ES6 全局变量或类型。")]),t._v(" "),a("h3",{attrs:{id:"processor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#processor"}},[t._v("#")]),t._v(" Processor")]),t._v(" "),a("p",[t._v("处理器可以从另一种文件中提取 JavaScript 代码，然后让 ESLint 检测 JavaScript 代码。或者处理器可以在预处理中转换 JavaScript 代码。")]),t._v(" "),a("p",[t._v("若要在配置文件中指定处理器，请使用 "),a("code",[t._v("processor")]),t._v(" 键，并使用由插件名和处理器名组成的串接字符串加上斜杠。例如，下面的选项启用插件 "),a("code",[t._v("a-plugin")]),t._v(" 提供的处理器 "),a("code",[t._v("a-processor")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"plugins"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a-plugin"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"processor"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a-plugin/a-processor"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("要为特定类型的文件指定处理器，可以用 "),a("code",[t._v("overrides")]),t._v(" 键和 "),a("code",[t._v("processor")]),t._v(" 键的组合。例如，下面对 "),a("code",[t._v("*.md")]),t._v(" 文件使用处理器 "),a("code",[t._v("a-plugin/markdown")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"plugins"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a-plugin"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"overrides"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"files"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*.md"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"processor"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a-plugin/markdown"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("处理器可以生成命名的代码块，如 "),a("code",[t._v("0.js")]),t._v(" 和 "),a("code",[t._v("1.js")]),t._v("。ESLint 将这样的命名代码块作为原始文件的子文件处理。你可以在配置的 "),a("code",[t._v("overrides")]),t._v(" 部分为已命名的代码块指定附加配置。")]),t._v(" "),a("p",[t._v("例如，下面的命令对以 "),a("code",[t._v(".js")]),t._v(" 结尾的 "),a("code",[t._v("markdown")]),t._v(" 文件中的已命名代码块禁用 "),a("code",[t._v("strict")]),t._v(" 规则：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"plugins"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a-plugin"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"overrides"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"files"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*.md"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"processor"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a-plugin/markdown"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"files"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"**/*.md/*.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"rules"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"strict"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"off"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("ESLint 检查指定代码块的文件扩展名，如果 "),a("code",[t._v("--ext")]),t._v(" CLI option 不包含文件扩展名，则忽略这些扩展名。如果您想要删除除 "),a("code",[t._v("*.js")]),t._v(" 之外的已命名代码块，请确保指定 "),a("code",[t._v("--ext")]),t._v(" 选项。")]),t._v(" "),a("h3",{attrs:{id:"environments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#environments"}},[t._v("#")]),t._v(" Environments")]),t._v(" "),a("p",[t._v("每个环境定义了一组预定义的全局变量。可用的环境包括但不仅是：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("browser")]),t._v(" - 浏览器环境中的全局变量。")]),t._v(" "),a("li",[a("code",[t._v("node")]),t._v(" - Node.js 全局变量和 Node.js 作用域。")]),t._v(" "),a("li",[a("code",[t._v("commonjs")]),t._v(" - CommonJS 全局变量和 CommonJS 作用域 (用于 Browserify/WebPack 打包的只在浏览器中运行的代码)。")]),t._v(" "),a("li",[a("code",[t._v("shared-node-browser")]),t._v(" - Node.js 和 Browser 通用全局变量。")]),t._v(" "),a("li",[a("code",[t._v("es6")]),t._v(" - 启用除了 "),a("code",[t._v("modules")]),t._v(" 以外的所有 ECMAScript 6 特性（该选项会自动设置 ecmaVersion 解析器选项为 6）。")]),t._v(" "),a("li",[a("code",[t._v("jquery")]),t._v(" - jQuery 全局变量。")]),t._v(" "),a("li",[a("code",[t._v("jest")]),t._v(" - Jest 全局变量。")]),t._v(" "),a("li",[a("code",[t._v("amd")]),t._v(" - 将 "),a("code",[t._v("require()")]),t._v(" 和 "),a("code",[t._v("define()")]),t._v(" 定义为像 "),a("a",{attrs:{href:"https://github.com/amdjs/amdjs-api/wiki/AMD",target:"_blank",rel:"noopener noreferrer"}},[t._v("amd"),a("OutboundLink")],1),t._v(" 一样的全局变量。")]),t._v(" "),a("li",[a("code",[t._v("mocha")]),t._v(" - 添加所有的 Mocha 测试全局变量。")])]),t._v(" "),a("p",[t._v("各个环境之间并不是互斥的，所以你可以同时定义多个：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"env"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"browser"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"node"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("如果你想在一个特定的插件中使用一种环境，确保提前在 "),a("code",[t._v("plugins")]),t._v(" 数组里指定了插件名，然后在 "),a("code",[t._v("env")]),t._v(" 配置中不带前缀的插件名后跟一个 "),a("code",[t._v("/")]),t._v("，紧随着环境名。例如：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"plugins"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"example"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"env"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"example/custom"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"globals"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#globals"}},[t._v("#")]),t._v(" Globals")]),t._v(" "),a("p",[t._v("当访问当前源文件内未定义的变量时，"),a("code",[t._v("no-undef")]),t._v(" 规则将发出警告。如果你想在一个源文件里使用全局变量，推荐你在 ESLint 中定义这些全局变量，这样 ESLint 就不会发出警告了。")]),t._v(" "),a("p",[t._v("要在配置文件中配置全局变量，需要把 "),a("code",[t._v("globals")]),t._v(' 设置为一个对象，该对象包含以你希望使用的每个全局变量。对于每个全局变量键，将对应的值设置为 "writable" 以允许重写变量，或 "readonly" 不允许重写变量。例如：')]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"globals"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"var1"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"writable"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"var2"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"readonly"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v('可以使用字符串 "off" 禁用全局变量。例如，在大多数 ES2015 全局变量可用但 Promise 不可用的环境中，你可以使用以下配置:')]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"env"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"es6"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"globals"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Promise"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"off"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"rules"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rules"}},[t._v("#")]),t._v(" Rules")]),t._v(" "),a("p",[t._v("在配置文件中，我们可以通过 "),a("code",[t._v("rules")]),t._v(" 字段来配置特定的规则，该字段的值是一个对象，每个 "),a("code",[t._v("key")]),t._v(" 都是一个规则的名称，对应的 "),a("code",[t._v("value")]),t._v(" 则是一个数组。")]),t._v(" "),a("p",[t._v("数组中的第一个值是错误级别，它可以是：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v('"off"')]),t._v(" or 0 - 关闭规则")]),t._v(" "),a("li",[a("code",[t._v('"warn"')]),t._v(" or 1 - 将规则视为一个警告（不会影响退出码）")]),t._v(" "),a("li",[a("code",[t._v('"error"')]),t._v(" or 2 - 将规则视为一个错误 (当被触发的时候，程序会以 1 为错误码退出)")])]),t._v(" "),a("p",[t._v("同时，针对某些可配置的规则，你可以通过数组的第二项来传递一些选项。")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"rules"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"eqeqeq"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"off"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"curly"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"quotes"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"double"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"plugin1/rule1"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("在这些配置文件中，规则 "),a("code",[t._v("plugin1/rule1")]),t._v(" 表示来自插件 "),a("code",[t._v("plugin1")]),t._v(" 的 "),a("code",[t._v("rule1")]),t._v(" 规则。")]),t._v(" "),a("p",[t._v("注意：当指定来自插件的规则时，确保删除 "),a("code",[t._v("eslint-plugin-")]),t._v(" 前缀。ESLint 在内部只使用没有前缀的名称去定位规则。")]),t._v(" "),a("h3",{attrs:{id:"plugins"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#plugins"}},[t._v("#")]),t._v(" Plugins")]),t._v(" "),a("p",[t._v("ESLint 支持使用第三方插件。在使用插件之前，你必须使用 "),a("a",{attrs:{href:"https://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("npm"),a("OutboundLink")],1),t._v(" 安装它。")]),t._v(" "),a("p",[t._v("插件除了可以有 Processor 外，还主要用于提供了除预设之外的自定义规则，当你在 ESLint 的规则里找不到你需要的时就可以借用插件来实现。")]),t._v(" "),a("p",[t._v("在配置文件里配置插件时，可以使用 "),a("code",[t._v("plugins")]),t._v(" 关键字来存放插件名字的列表。插件名称可以省略 "),a("code",[t._v("eslint-plugin-")]),t._v(" 前缀。")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"plugins"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"plugin1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint-plugin-plugin2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("注意：插件是相对于 ESLint 进程的当前工作目录解析的。换句话说，ESLint 将加载与用户通过从项目 Node 交互解释器运行 "),a("code",[t._v("('eslint-plugin-pluginname')")]),t._v(" 获得的相同的插件。")]),t._v(" "),a("h3",{attrs:{id:"overrides"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#overrides"}},[t._v("#")]),t._v(" Overrides")]),t._v(" "),a("p",[t._v("若要禁用一组文件的配置文件中的规则，请使用 "),a("code",[t._v("overrides")]),t._v(" 和 "),a("code",[t._v("files")]),t._v("。例如:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"rules"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"overrides"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"files"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*-test.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*.spec.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"rules"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"no-unused-expressions"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"off"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"shared-settings"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shared-settings"}},[t._v("#")]),t._v(" Shared Settings")]),t._v(" "),a("p",[t._v("ESLint 支持在配置文件添加共享设置。你可以添加 "),a("code",[t._v("settings")]),t._v(" 对象到配置文件，它将提供给每一个将被执行的规则。如果你想添加的自定义规则而且使它们可以访问到相同的信息，这将会很有用，并且很容易配置。")]),t._v(" "),a("p",[t._v("在 JSON 中：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"settings"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sharedData"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"extends"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#extends"}},[t._v("#")]),t._v(" Extends")]),t._v(" "),a("p",[t._v("每个配置文件可以被基础配置中的已启用的规则继承，其关键的 "),a("code",[t._v("extends")]),t._v(" 字段可以是：")]),t._v(" "),a("ul",[a("li",[t._v("指定配置的字符串(配置文件的路径、可共享配置的名称、eslint:recommended 或 eslint:all)。")]),t._v(" "),a("li",[t._v("字符串数组：每个配置继承它前面的配置。")])]),t._v(" "),a("p",[t._v("ESLint 递归地扩展配置，因此基本配置也可以具有 "),a("code",[t._v("extends")]),t._v(" 属性。"),a("code",[t._v("extends")]),t._v(" 属性中的相对路径和可共享配置名从配置文件中出现的位置解析。")]),t._v(" "),a("p",[a("code",[t._v("rules")]),t._v(" 属性可以做下面的任何事情以扩展（或覆盖）规则：")]),t._v(" "),a("ul",[a("li",[t._v("启用额外的规则。")]),t._v(" "),a("li",[t._v("改变继承的规则级别而不改变它的选项：\n"),a("ul",[a("li",[t._v("基础配置："),a("code",[t._v('"eqeqeq": ["error", "allow-null"]')]),t._v("；")]),t._v(" "),a("li",[t._v("派生的配置："),a("code",[t._v('"eqeqeq": "warn"')]),t._v("；")]),t._v(" "),a("li",[t._v("最后生成的配置："),a("code",[t._v('"eqeqeq": ["warn", "allow-null"]')]),t._v("。")])])]),t._v(" "),a("li",[t._v("覆盖基础配置中的规则的选项：\n"),a("ul",[a("li",[t._v("基础配置："),a("code",[t._v('"quotes": ["error", "single", "avoid-escape"]')]),t._v("；")]),t._v(" "),a("li",[t._v("派生的配置："),a("code",[t._v('"quotes": ["error", "single"]')]),t._v("；")]),t._v(" "),a("li",[t._v("最后生成的配置："),a("code",[t._v('"quotes": ["error", "single"]')]),t._v("。")])])])]),t._v(" "),a("p",[t._v("通常会使用 "),a("code",[t._v("extends")]),t._v(" 继承"),a("a",{attrs:{href:"https://cn.eslint.org/docs/developer-guide/shareable-configs",target:"_blank",rel:"noopener noreferrer"}},[t._v("共享的配置"),a("OutboundLink")],1),t._v("和插件提供的配置"),a("a",{attrs:{href:"https://cn.eslint.org/docs/developer-guide/working-with-plugins#configs-in-plugins",target:"_blank",rel:"noopener noreferrer"}},[t._v("configs_in_plugins"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"其它"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其它"}},[t._v("#")]),t._v(" 其它")]),t._v(" "),a("p",[t._v("设置配置文件：")]),t._v(" "),a("p",[t._v("你可以通过命令行提供的 "),a("code",[t._v("-c")]),t._v(" 选项来指定使用哪个配置文件。")]),t._v(" "),a("p",[t._v("层叠配置：")]),t._v(" "),a("p",[t._v("默认情况下，ESLint 会在所有父级目录里寻找配置文件，一直到根目录。")]),t._v(" "),a("p",[t._v("层叠配置意味着当你在多层目录中都拥有配置文件时，ESLint 将会使用离要检测的文件最近的 "),a("code",[t._v(".eslintrc")]),t._v(" 文件作为最高优先级（是覆盖，而不是直接代替），然后才是父目录里的配置文件，等等。")]),t._v(" "),a("p",[t._v("ESLint 一旦发现配置文件中有 "),a("code",[t._v('"root": true')]),t._v("，它就会停止在父级目录中寻找。")]),t._v(" "),a("p",[t._v("在 ESLint 中还支持一些基于 "),a("a",{attrs:{href:"https://cn.eslint.org/docs/user-guide/configuring#configuration-based-on-glob-patterns",target:"_blank",rel:"noopener noreferrer"}},[t._v("Glob Pattern"),a("OutboundLink")],1),t._v(" 的配置，以便于做一些要更精细的配置。")]),t._v(" "),a("h2",{attrs:{id:"忽略文件或目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#忽略文件或目录"}},[t._v("#")]),t._v(" 忽略文件或目录")]),t._v(" "),a("p",[t._v("有时候，你并不想对项目下的所有文件做校验，尤其是像 "),a("code",[t._v("node_modules")]),t._v(" 这样的目录。此时，你可以通过在项目根目录创建一个 "),a("code",[t._v(".eslintignore")]),t._v(" 文件告诉 ESLint 去忽略特定的文件和目录。")]),t._v(" "),a("p",[a("code",[t._v(".eslintignore")]),t._v(" 文件是一个纯文本文件，其中的每一行都是一个 "),a("code",[t._v("glob")]),t._v(" 模式表明哪些路径应该忽略检测。Globs 匹配使用 node-ignore，所以大量可用的特性有：")]),t._v(" "),a("ul",[a("li",[t._v("以 "),a("code",[t._v("#")]),t._v(" 开头的行被当作注释，不影响忽略模式。")]),t._v(" "),a("li",[t._v("路径是相对于 "),a("code",[t._v(".eslintignore")]),t._v(" 的位置或当前工作目录。")]),t._v(" "),a("li",[t._v("忽略模式同 "),a("code",[t._v(".gitignore")]),t._v(" 规范")]),t._v(" "),a("li",[t._v("以 "),a("code",[t._v("!")]),t._v(" 开头的行是否定模式，它将会重新包含一个之前被忽略的模式。")]),t._v(" "),a("li",[t._v("忽略模式依照 "),a("code",[t._v(".gitignore")]),t._v(" 规范.")])]),t._v(" "),a("p",[t._v("除了 "),a("code",[t._v(".eslintignore")]),t._v(" 文件中的模式，ESLint 总是忽略 /"),a("code",[t._v("node_modules/*")]),t._v(" 和 "),a("code",[t._v("/bower_components/*")]),t._v(" 中的文件。")]),t._v(" "),a("p",[t._v("你也可以使用命令行 "),a("code",[t._v("--ignore-path")]),t._v(" 选项来指定忽略规则文件所在位置。")]),t._v(" "),a("h2",{attrs:{id:"配置案例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置案例"}},[t._v("#")]),t._v(" 配置案例")]),t._v(" "),a("p",[t._v("接下来我们使用 "),a("a",{attrs:{href:"https://github.com/airbnb/javascript",target:"_blank",rel:"noopener noreferrer"}},[t._v("Airbnb"),a("OutboundLink")],1),t._v(" 提供的校验规则为例，列举几种配置情况。")]),t._v(" "),a("h3",{attrs:{id:"基础的-javascript-校验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础的-javascript-校验"}},[t._v("#")]),t._v(" 基础的 JavaScript 校验")]),t._v(" "),a("p",[t._v("主要由 "),a("code",[t._v("eslint-config-airbnb-base")]),t._v(" 包来进行校验，通过下面的命令查看此包的依赖并进行安装：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" info "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint-config-airbnb-base@latest"')]),t._v(" peerDependencies\n")])])]),a("p",[t._v("然后在配置文件中进行继承：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"extends"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"airbnb-base/legacy"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"校验-react-项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#校验-react-项目"}},[t._v("#")]),t._v(" 校验 React 项目")]),t._v(" "),a("p",[t._v("主要由 "),a("code",[t._v("eslint-config-airbnb")]),t._v(" 包来进行校验，通过下面的命令查看此包的依赖并进行安装：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" info "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint-config-airbnb@latest"')]),t._v(" peerDependencies\n")])])]),a("p",[t._v("然后在配置文件中进行继承：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"extends"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"airbnb"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"基础的-typescript-校验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础的-typescript-校验"}},[t._v("#")]),t._v(" 基础的 TypeScript 校验")]),t._v(" "),a("p",[t._v("安装依赖：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -D eslint typescript @typescript-eslint/parser @typescript-eslint/eslint-plugin\n")])])]),a("p",[t._v("配置：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("root")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("parser")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@typescript-eslint/parser'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("plugins")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@typescript-eslint'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eslint:recommended'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'plugin:@typescript-eslint/recommended'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("在进行校验时不要忘了使用 --ext 选项来指定校验文件的扩展名：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" eslint "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" --ext .js,.jsx,.ts,.tsx\n")])])]),a("p",[t._v("更多使用方式可以点击"),a("a",{attrs:{href:"https://github.com/typescript-eslint/typescript-eslint/blob/master/docs/getting-started/linting/README.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看更多"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://cn.eslint.org/docs/user-guide/configuring",target:"_blank",rel:"noopener noreferrer"}},[t._v("Configuring ESLint - ESLint 中文"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"5cf5dfe2f265da1bd522baaa"}},[t._v("最全的 Eslint 配置模板，从此统一团队的编程习惯 - 掘金")])]),t._v(" "),a("li",[a("a",{attrs:{href:"http://www.alloyteam.com/2017/08/13065/",target:"_blank",rel:"noopener noreferrer"}},[t._v("AlloyTeam ESLint 配置指南 | AlloyTeam"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/typescript-eslint/typescript-eslint/blob/master/docs/getting-started/linting/README.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("typescript-eslint/README.md at master · typescript-eslint/typescript-eslint · GitHub"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/iamturns/eslint-config-airbnb-typescript",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub - iamturns/eslint-config-airbnb-typescript: Airbnb's ESLint config with TypeScript support"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://qiita.com/park-jh/items/c31784c950561521d035",target:"_blank",rel:"noopener noreferrer"}},[t._v("webpack + typescript + react + prettier + eslint + airbnb - Qiita"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=n.exports}}]);