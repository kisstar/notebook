(window.webpackJsonp=window.webpackJsonp||[]).push([[308],{723:function(t,e,a){"use strict";a.r(e);var s=a(62),v=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"定制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定制"}},[t._v("#")]),t._v(" 定制")]),t._v(" "),a("p",[t._v("通常 Vim 的配置文件会存储在你的家目录下："),a("code",[t._v("$HOME/.vimrc")]),t._v("，不同的系统可能会有所不同。")]),t._v(" "),a("p",[t._v("更多信息可以通过 "),a("code",[t._v(":h vimrc")]),t._v(" 和 "),a("code",[t._v(":h vimfiles")]),t._v(" 来查看（h 是 help 的缩写）。")]),t._v(" "),a("h2",{attrs:{id:"配置项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置项"}},[t._v("#")]),t._v(" 配置项")]),t._v(" "),a("p",[t._v("在配置文件注释需要使用 "),a("code",[t._v('"')]),t._v("，配置完成后可以使用 "),a("code",[t._v(":source ~/.vimrc")]),t._v(" 来使其立即生效。")]),t._v(" "),a("p",[t._v("使用 "),a("code",[t._v(":set")]),t._v(" 可以查看已经配置的内容，"),a("code",[t._v(":set all")]),t._v(" 则可以看到所有的配置。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("功能")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("配置")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("备注")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("显示行号")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("set number")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("number")]),t._v(" 可以缩写为 "),a("code",[t._v("nu")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("与系统共享复制粘贴")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("set clipboard=unnamed")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("高亮搜索结果")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("set hlsearch")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("添加游标底线")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("set cursorline")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("取消 "),a("code",[t._v("swap")]),t._v(" 暂存机制")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("set noswapfile")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("输入模式，使用空白替代 Tab，并指定个数")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("set softtabstop=2")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Normal 模式，缩进的宽度为两个空格")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("set shiftwidth=2")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("将 Tab 替换为空白")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("set expandtab")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("需要结合 "),a("code",[t._v(":retab")]),t._v(" 激活重新计算 Tab")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("总是显示 Tab 标签，默认只有一个标签时，顶部不会显示标签")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("set showtabline=2")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("水平切割窗格时，打开在下面")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("set splitbelow")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("垂直切割窗格时，打开在右边")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("set splitright")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("搜索匹配不区分大小写")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("set ignorecase")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("开启渐进式搜索")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("set incsearch")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("开启语法支持")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("syntax on")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("指定颜色主题")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("colorscheme <theme_name>")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v(":colorschme")]),t._v(" + "),a("code",[t._v("Ctrl + d")]),t._v(" 查看可用列表")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("显示当前所在行和列")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("set ruler")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("关闭折行")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("set nowrap")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("折行时保持单词完整")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("set linebreak")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("关闭显示当前模式")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("set noshowmode")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("显示当前进行的指定")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("set showcmd")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("在临近边界三行的位置开始滚动")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("set scrolloff=3")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("输入的关键字中存在大写时，智能关闭忽略大小写")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("set smartcase")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("显示 Tab 和换行")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("set list")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})])])]),t._v(" "),a("p",[t._v("针对不同的文件类型，可以在换行等步骤进行智能的缩进等。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("filetype on\nfiletype indent on\nfiletype plugin on\n")])])]),a("p",[t._v("另外，使用 "),a("code",[t._v("source <path_to_file>")]),t._v(" 可以启用指定的文件中的配置。这样可以把配置进行分解，分类放置在不同的文件中。")]),t._v(" "),a("h2",{attrs:{id:"key-map"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#key-map"}},[t._v("#")]),t._v(" Key Map")]),t._v(" "),a("p",[t._v("设置按键映射，可以根据不同的模式进行定制，对应的指令包括 "),a("code",[t._v("map")]),t._v("、"),a("code",[t._v("nmap")]),t._v("、"),a("code",[t._v("imap")]),t._v("、"),a("code",[t._v("vmap")]),t._v("。")]),t._v(" "),a("p",[t._v("其中 "),a("code",[t._v("map")]),t._v(" 可以在 Normal 和 Vistual 模式下同时生效。")]),t._v(" "),a("p",[t._v("使用 "),a("code",[t._v(":h key-notation")]),t._v(" 可以查看特殊按键在 Vim 中的指代。")]),t._v(" "),a("p",[t._v("比如在 Vistual 模式使用 "),a("code",[t._v("Tab")]),t._v(" 和 "),a("code",[t._v("Shift + Tab")]),t._v(" 来进行缩进。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("vmap "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Tab"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v("\nvmap "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("S-Tab"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("\n")])])]),a("p",[t._v("如果你需要将某个按键设置为无行为的话，可以将其映射为 "),a("code",[t._v("<Nop>")]),t._v("。")]),t._v(" "),a("p",[t._v("使用 "),a("code",[t._v(":map")]),t._v(" 可以查看已经指定的映射。")]),t._v(" "),a("p",[t._v("另外，为了避免循环映射的出现，还可使用 "),a("code",[t._v("noremap")]),t._v("，同样对应不同的模式提供了 "),a("code",[t._v("nmap")]),t._v("、"),a("code",[t._v("imap")]),t._v("、"),a("code",[t._v("vmap")]),t._v(" 指令。")]),t._v(" "),a("p",[t._v("如果你想取消某个映射的话，可以使用 unmap，同样每个模式有对应的指令。比如取消上面的缩进指令：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("vumap "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Tab"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nvumap "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("S-Tab"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("你也可以使用 "),a("code",[t._v(":mapclear")]),t._v(" 直接一次性取消所有的映射。")]),t._v(" "),a("h2",{attrs:{id:"auto-cmd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#auto-cmd"}},[t._v("#")]),t._v(" Auto CMD")]),t._v(" "),a("p",[t._v("类似发布订阅机制。指定在某种事件发生时，触发对应的指令。使用 "),a("code",[t._v(":h autocmd")]),t._v(" 可以查看支持的事件。")]),t._v(" "),a("p",[t._v("比如，只在激活的窗格中显示 "),a("code",[t._v("cursorline")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("autocmd WinEnter * setlocal cursorline\nautocmd WinLeave * setlocal nocursorline\n")])])]),a("p",[t._v("或则存档时自动清除多余的空格：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("autocmd BufWritePre * :%s/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("+$//e\n")])])]),a("p",[t._v("或则在按下 "),a("code",[t._v("F5")]),t._v(" 时执行当前文件：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("autocmd BufRead,BufNewFile *.js noremap "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("F"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("5")]),t._v(">")]),t._v(" :% w "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("node "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Enter"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("h2",{attrs:{id:"配置语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置语法"}},[t._v("#")]),t._v(" 配置语法")]),t._v(" "),a("p",[t._v("如果配置语法出现错误，可能会导致整个程序崩溃。因此在可能会出错的地方可以做一些安全措施。")]),t._v(" "),a("p",[t._v("比如将指令放置到 "),a("code",[t._v("try catch")]),t._v(" 语句中，Vim 也提供了类似的机制。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("try\n    colorscheme darkblue\ncatch\n    colorscheme shine\nendtry\n")])])]),a("p",[t._v("在配置 "),a("code",[t._v("autocmd")]),t._v(" 时，可以先检查是否支持：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" executable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"node"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    autocmd BufRead,BufNewFile *.js noremap "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("F"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("5")]),t._v(">")]),t._v(" :% w "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("node "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Enter"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n    autocmd BufRead,BufNewFile *.js noremap "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("F"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("5")]),t._v(">")]),t._v(" :echo "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"you need to install node first!"')]),t._v("\nendif\n")])])]),a("h2",{attrs:{id:"插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插件"}},[t._v("#")]),t._v(" 插件")]),t._v(" "),a("p",[t._v("为了对插件进行管理，所以通常会先安装一个插件管理器。")]),t._v(" "),a("p",[t._v("这里使用更加轻量的插件管理器 "),a("a",{attrs:{href:"https://github.com/junegunn/vim-plug",target:"_blank",rel:"noopener noreferrer"}},[t._v("vim-plug"),a("OutboundLink")],1),t._v("，它利用异步并行可以快速地安装、更新和卸载插件。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -fLo ~/.vim/autoload/plug.vim --create-dirs "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim\n")])])]),a("p",[t._v("启用则需要在配置文件中添加以下内容：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Specify a directory for plugins")]),t._v("\ncall plug"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#begin('~/.vim/plugged')")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# plugins...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Initialize plugin system")]),t._v("\ncall plug"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#end()")]),t._v("\n")])])]),a("p",[t._v("当我们需要安装一个插件时，只需要知道插件在 GitHub 上的地址，然后在上面 "),a("code",[t._v("plugins...")]),t._v(" 的地方进行指定。")]),t._v(" "),a("p",[t._v("比如安装 Vim Airline：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 注意使用单引号")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 你也可以指定完整地址，或则像下面这也简写")]),t._v("\nPlug "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vim-airline/vim-airline'")]),t._v("\n")])])]),a("p",[t._v("然后重载 "),a("code",[t._v(".vimrc")]),t._v(" 文件，执行 "),a("code",[t._v(":PlugInstall")]),t._v(" 即可。")]),t._v(" "),a("p",[t._v("常用的命令包括：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v(":PlugUpgrade "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 更新插件本身")]),t._v("\n:PlugUpdate "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 更新所有已安装的插件")]),t._v("\n:PlugStatus "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看已安装插件的状态")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果希望卸载插件，先在配置文件中注释或者删除对应插件的配置信息，然后再执行以下命令：")]),t._v("\n:PlugClean\n")])])]),a("h2",{attrs:{id:"其它"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其它"}},[t._v("#")]),t._v(" 其它")]),t._v(" "),a("p",[t._v("在 Vim 中可以使用 "),a("code",[t._v(".")]),t._v(" 来重复上一次的动作，但是这好像并不好控制上一次的动作应该包括哪些。")]),t._v(" "),a("p",[t._v("好在 Vim 提供了类似于录制和重播的功能。当你在 Normal 模式按下 "),a("code",[t._v("q")]),t._v(" 时，紧接着指定一个 "),a("code",[t._v("register")]),t._v(" 就可以进行录制模式。")]),t._v(" "),a("p",[t._v("在按下 "),a("code",[t._v("q")]),t._v(" 来结束录制之前，期间的动作都会被记录。之后，你可以通过按下 "),a("code",[t._v("@")]),t._v(" 紧接着指定一个 "),a("code",[t._v("register")]),t._v(" 来重复这个 "),a("code",[t._v("register")]),t._v(" 记录的动作。")]),t._v(" "),a("p",[t._v("使用 "),a("code",[t._v(":reg <register>")]),t._v(" 可以查看 "),a("code",[t._v("register")]),t._v(" 记录的动作。")]),t._v(" "),a("p",[t._v("全局替换也是一个比较常用的功能。")]),t._v(" "),a("p",[t._v("例如我想把 "),a("code",[t._v("test1")]),t._v(" 都替换为 "),a("code",[t._v("test2")]),t._v(" 可以使用 "),a("code",[t._v(":%s/test1/test2/g")]),t._v(" 来完成。将其中的 "),a("code",[t._v("g")]),t._v(" 指定为 "),a("code",[t._v("gc")]),t._v(" 则会在每个替换前进行询问。")])])}),[],!1,null,null,null);e.default=v.exports}}]);