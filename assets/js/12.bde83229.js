(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{429:function(t,a,s){"use strict";s.r(a);var n=s(62),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"轮转数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#轮转数组"}},[t._v("#")]),t._v(" 轮转数组")]),t._v(" "),s("p",[t._v("给你一个数组，将数组中的元素向右轮转 k 个位置，其中 k 是非负数。")]),t._v(" "),s("p",[t._v("示例 1:")]),t._v(" "),s("div",{staticClass:"language-plaintext extra-class"},[s("pre",{pre:!0,attrs:{class:"language-plaintext"}},[s("code",[t._v("输入: nums = [1, 2, 3, 4, 5, 6, 7], k = 3\n输出: [5, 6, 7, 1, 2, 3, 4]\n解释:\n向右轮转 1 步: [7, 1, 2, 3, 4, 5, 6]\n向右轮转 2 步: [6, 7, 1, 2, 3, 4, 5]\n向右轮转 3 步: [5, 6, 7, 1, 2, 3, 4]\n")])])]),s("div",{staticClass:"language-plaintext extra-class"},[s("pre",{pre:!0,attrs:{class:"language-plaintext"}},[s("code",[t._v("输入：nums = [-1, -100, 3, 99], k = 2\n输出：[3, 99, -1, -100]\n解释:\n向右轮转 1 步: [99, -1, -100, 3]\n向右轮转 2 步: [3, 99, -1, -100]\n")])])]),s("h2",{attrs:{id:"javascript"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript"}},[t._v("#")]),t._v(" JavaScript")]),t._v(" "),s("p",[t._v("解法 1：")]),t._v(" "),s("p",[t._v("如果移动的次数是数组长度的倍数则相当于没有发生移动，所以先将移动的次数和数组长度进行取模，然后根据移动的次数把倒数几位的数字移动到前面。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {number[]} nums\n * @param {number} k\n * @return {void} Do not return anything, modify nums in-place instead.\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("rotate")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" k")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" len "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" tk "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" k "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" len\n\n  nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unshift")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("splice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" tk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://leetcode-cn.com/problems/rotate-array",target:"_blank",rel:"noopener noreferrer"}},[t._v("189. 轮转数组 - 力扣（LeetCode）"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=e.exports}}]);