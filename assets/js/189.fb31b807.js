(window.webpackJsonp=window.webpackJsonp||[]).push([[189],{603:function(t,s,a){"use strict";a.r(s);var n=a(62),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"ydkjs-混合环境-javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ydkjs-混合环境-javascript"}},[t._v("#")]),t._v(" YDKJS-混合环境 JavaScript")]),t._v(" "),a("p",[t._v("如果 JavaScript 程序仅仅是在引擎中运行的话，它会严格遵循规范并且是可以预测的。")]),t._v(" "),a("p",[t._v("但是 JavaScript 程序几乎总是在宿主环境中运行，这使得它在一定程度上变得不可预测。")]),t._v(" "),a("h2",{attrs:{id:"annex-b-ecmascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#annex-b-ecmascript"}},[t._v("#")]),t._v(" Annex B（ECMAScript）")]),t._v(" "),a("p",[t._v("JavaScript 语言的官方名称是 ECMAScript（指的是管理它的 ECMA 标准），JavaScript 是该语言的通用称谓，更确切地说，它是该规范在浏览器上的实现。")]),t._v(" "),a("p",[t._v("官方 ECMAScript 规范包括 Annex B，其中介绍了由于浏览器兼容性问题导致的与官方规范的差异，下面是主要的兼容性差异：")]),t._v(" "),a("ul",[a("li",[t._v("在非严格模式中允许八进制数值常量存在，如 0123（即十进制的 83）。")]),t._v(" "),a("li",[a("code",[t._v("window.escape(..)")]),t._v(" 和 "),a("code",[t._v("window.unescape(..)")]),t._v(" 让你能够转义和回转带有 "),a("code",[t._v("%")]),t._v(" 分隔符的十六进制字符串。")]),t._v(" "),a("li",[a("code",[t._v("String.prototype.substr")]),t._v(" 和 "),a("code",[t._v("String.prototype.substring")]),t._v(" 十分相似，除了前者的第二个参数是结束位置索引（非自包含），后者的第二个参数是长度（需要包含的字符数）。")])]),t._v(" "),a("h3",{attrs:{id:"web-ecmascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web-ecmascript"}},[t._v("#")]),t._v(" Web ECMAScript")]),t._v(" "),a("p",[t._v("Web ECMAScript 规范（"),a("a",{attrs:{href:"https://javascript.spec.whatwg.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://javascript.spec.whatwg.org"),a("OutboundLink")],1),t._v("）中介绍了官方 ECMAScript 规范和目前基于浏览器的 JavaScript 实现之间的差异。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("\x3c!--")]),t._v(" 和 "),a("code",[t._v("--\x3e")]),t._v(" 是合法的单行注释分隔符。")]),t._v(" "),a("li",[a("code",[t._v("String.prototype")]),t._v(" 中返回 HTML 格式字符串的附加方法："),a("code",[t._v("anchor(..)")]),t._v("、"),a("code",[t._v("big(..)")]),t._v("、"),a("code",[t._v("blink(..)")]),t._v("、"),a("code",[t._v("bold(..)")]),t._v("、"),a("code",[t._v("fixed(..)")]),t._v("、"),a("code",[t._v("fontcolor(..)")]),t._v("、"),a("code",[t._v("fontsize(..)")]),t._v("、"),a("code",[t._v("italics(..)")]),t._v("、"),a("code",[t._v("link(..)")]),t._v("、"),a("code",[t._v("small(..)")]),t._v("、"),a("code",[t._v("strike(..)")]),t._v(" 和 "),a("code",[t._v("sub(..)")]),t._v("。")]),t._v(" "),a("li",[t._v("RegExp 扩展："),a("code",[t._v("RegExp.$1 .. RegExp.$9")]),t._v("（匹配组）和 "),a("code",[t._v('RegExp.lastMatch/RegExp["$&"]')]),t._v("（最近匹配）。")]),t._v(" "),a("li",[a("code",[t._v("Function.prototype")]),t._v(" 附加方法："),a("code",[t._v("Function.prototype.arguments")]),t._v("（别名为 arguments 对象）和 "),a("code",[t._v("Function.caller")]),t._v("（别名为 arguments.caller）。")])]),t._v(" "),a("h2",{attrs:{id:"宿主对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#宿主对象"}},[t._v("#")]),t._v(" 宿主对象")]),t._v(" "),a("p",[t._v("JavaScript 中有关变量的规则定义得十分清楚，但也不乏一些例外情况，比如自动定义的变量，以及由宿主环境（浏览器等）创建并提供给 JavaScript 引擎的变量——所谓的“宿主对象”（包括内建对象和函数）。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'div'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "object"--正如所料')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "[object HTMLDivElement]"')]),t._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tagName "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "DIV"')]),t._v("\n")])])]),a("p",[t._v("示例中，"),a("code",[t._v("a")]),t._v(" 不仅仅是一个 "),a("code",[t._v("object")]),t._v("，还是一个特殊的宿主对象，因为它是一个 DOM 元素。其内部的 "),a("code",[t._v("[[Class]]")]),t._v(" 值（为 "),a("code",[t._v('"HTMLDivElement"')]),t._v("）来自预定义的属性（通常也是不可更改的）。")]),t._v(" "),a("p",[t._v("其他需要注意的宿主对象的行为差异有：")]),t._v(" "),a("ul",[a("li",[t._v("无法访问正常的 object 内建方法，如 toString();")]),t._v(" "),a("li",[t._v("无法写覆盖；")]),t._v(" "),a("li",[t._v("包含一些预定义的只读属性；")]),t._v(" "),a("li",[t._v("包含无法将 this 重载为其他对象的方法；")]),t._v(" "),a("li",[t._v("其他 ...")])]),t._v(" "),a("h2",{attrs:{id:"全局-dom-变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局-dom-变量"}},[t._v("#")]),t._v(" 全局 DOM 变量")]),t._v(" "),a("p",[t._v("声明一个全局变量（使用 var 或者不使用）的结果并不仅仅是创建一个全局变量，而且还会在 "),a("code",[t._v("global")]),t._v(" 对象（在浏览器中为 window）中创建一个同名属性。")]),t._v(" "),a("p",[t._v("还有一个不太为人所知的事实是：由于浏览器演进的历史遗留问题，在创建带有 "),a("code",[t._v("id")]),t._v(" 属性的 DOM 元素时也会创建同名的全局变量。例如：")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// HTML元素")]),t._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("这也是尽量不要使用全局变量的一个原因。如果确实要用，也要确保变量名的唯一性，从而避免与其他地方的变量产生冲突，包括 HTML 和其他第三方代码。")]),t._v(" "),a("h2",{attrs:{id:"原生原型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原生原型"}},[t._v("#")]),t._v(" 原生原型")]),t._v(" "),a("p",[t._v("在 JavaScript 中一个广为人知的最佳实践是：不要扩展原生原型。")]),t._v(" "),a("p",[t._v("例如向 "),a("code",[t._v("Array.prototype")]),t._v(" 中加入新的方法和属性，假设它们确实有用，设计和命名都很得当，那它最后很有可能会被加入到 JavaScript 规范当中。这样一来你所做的扩展就会与之冲突。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Netscape 4没有Array.push")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("push")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" item\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("问题在于 "),a("code",[t._v("Array.prototype.push")]),t._v(" 加入规范规范后，和这段代码不兼容。标准的 "),a("code",[t._v("push(..)")]),t._v(" 可以一次加入多个值。而这段代码中的 "),a("code",[t._v("push")]),t._v(" 方法则只会处理第一个值。")]),t._v(" "),a("p",[t._v("在扩展原生方法时需要加入判断条件（因为你可能无意中覆盖了原来的方法）。对于前面的例子，下面的处理方式要更好一些：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("push"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Netscape 4没有Array.push")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("push")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" item\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("但它并非万全之策，并且存在着一定的隐患。通常来说，在老版本的（不符合规范的）运行环境中扩展原生方法是唯一安全的，因为环境不太可能发生变化。")]),t._v(" "),a("p",[t._v("另外就是对于将来可能成为标准的功能，按照大部分人赞同的方式来预先实现能和将来的标准兼容的 "),a("code",[t._v("polyfill")]),t._v("，我们称为 "),a("code",[t._v("prollyfill")]),t._v("（probably fill）。")]),t._v(" "),a("p",[t._v("有些功能可能没法提供完整的 "),a("code",[t._v("polyfill")]),t._v("，所以在处理这些情况的时候需要格外小心，要编写健壮的代码，并且写好文档。")]),t._v(" "),a("h2",{attrs:{id:"script"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#script"}},[t._v("#")]),t._v(" script")]),t._v(" "),a("p",[t._v("绝大部分网站 / Web 应用程序的代码都存放在多个文件中，然后在网页中使用 "),a("code",[t._v("script")]),t._v(" 标签来引入，引入的代码的运行方式像是相互独立的 JavaScript 程序，但同时又共享一个全局对象。")]),t._v(" "),a("p",[t._v("如果 "),a("code",[t._v("script")]),t._v(" 中的代码（无论是内联代码还是外部代码）发生错误，它会像独立的 JavaScript 程序那样停止，但是后续的 "),a("code",[t._v("script")]),t._v(" 中的代码依然会接着运行，不会受影响。")]),t._v(" "),a("p",[t._v("你可以使用代码来动态创建 "),a("code",[t._v("script")]),t._v("，将其加入到页面的 DOM 中，效果是一样的：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" greeting "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello World'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" el "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'script'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function foo(){ alert( greeting );\\\n } setTimeout( foo, 1000 );'")]),t._v("\ndocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("el"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("内联代码和外部文件中的代码之间有一个区别，即在内联代码中不可以出现 "),a("code",[t._v("<\/script>")]),t._v(" 字符串，一旦出现即被视为代码块结束。")]),t._v(" "),a("h2",{attrs:{id:"保留字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#保留字"}},[t._v("#")]),t._v(" 保留字")]),t._v(" "),a("p",[t._v("ES5 规范定义了一些“保留字”，我们不能将它们用作变量名。这些保留字有四类：“关键字”、“预留关键字”、"),a("code",[t._v("null")]),t._v(" 常量和 "),a("code",[t._v("true")]),t._v("/"),a("code",[t._v("false")]),t._v(" 布尔常量。")]),t._v(" "),a("p",[t._v("像 "),a("code",[t._v("function")]),t._v(" 和 "),a("code",[t._v("switch")]),t._v(" 都是关键字。预留关键字包括 "),a("code",[t._v("enum")]),t._v(" 等，它们中很多已经在 ES6 中被用到（如 class、extend 等）。另外还有一些在严格模式中使用的保留字，如 "),a("code",[t._v("interface")]),t._v("。")]),t._v(" "),a("p",[t._v("在 ES5 之前，保留字也不能用来作为对象常量中的属性名称或者键值，但是现在已经没有这个限制。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 例如，下面的情况是不允许的")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'42'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 但是下面的情况是允许的")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'42'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("import"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("需要注意的是，在一些版本较老的浏览器中（主要是 IE），这些规则并不完全适用，有时候将保留字作为对象属性还是会出错。所以需要在所有要支持的浏览器中仔细测试。")]),t._v(" "),a("h2",{attrs:{id:"实现中的限制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现中的限制"}},[t._v("#")]),t._v(" 实现中的限制")]),t._v(" "),a("p",[t._v("JavaScript 规范对于函数中参数的个数，以及字符串常量的长度等并没有限制；但是由于 JavaScript 引擎实现各异，规范在某些地方有一些限制。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" sum\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" nums "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  nums"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 12")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nums"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 应该是: 499950000")]),t._v("\n")])])]),a("p",[t._v("在一些 JavaScript 引擎中你会得到正确答案 499950000，而另外一些引擎（如 Safari 6.x）中则会产生错误“RangeError: Maximum call stack size exceeded”。")]),t._v(" "),a("p",[t._v("下面列出一些已知的限制：")]),t._v(" "),a("ul",[a("li",[t._v("字符串常量中允许的最大字符数（并非只是针对字符串值）；")]),t._v(" "),a("li",[t._v("可以作为参数传递到函数中的数据大小（也称为栈大小，以字节为单位）；")]),t._v(" "),a("li",[t._v("函数声明中的参数个数；")]),t._v(" "),a("li",[t._v("未经优化的调用栈（例如递归）的最大层数，即函数调用链的最大长度；")]),t._v(" "),a("li",[t._v("JavaScript 程序以阻塞方式在浏览器中运行的最长时间（秒）；")]),t._v(" "),a("li",[t._v("变量名的最大长度。")])]),t._v(" "),a("p",[t._v("我们不会经常碰到这些限制，但应该对它们有所了解，特别是不同的 JavaScript 引擎的限制各异。")])])}),[],!1,null,null,null);s.default=e.exports}}]);