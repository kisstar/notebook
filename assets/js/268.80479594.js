(window.webpackJsonp=window.webpackJsonp||[]).push([[268],{680:function(t,s,a){"use strict";a.r(s);var e=a(62),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"常用插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用插件"}},[t._v("#")]),t._v(" 常用插件")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/vim-airline/vim-airline",target:"_blank",rel:"noopener noreferrer"}},[t._v("vim-airline/vim-airline"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/vim-airline/vim-airline-themes",target:"_blank",rel:"noopener noreferrer"}},[t._v("vim-airline-themes"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/ctrlpvim/ctrlp.vim",target:"_blank",rel:"noopener noreferrer"}},[t._v("ctrlpvim/ctrlp.vim"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/scrooloose/nerdtree",target:"_blank",rel:"noopener noreferrer"}},[t._v("scrooloose/nerdtree"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/mattn/emmet-vim",target:"_blank",rel:"noopener noreferrer"}},[t._v("mattn/emmet-vim"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/tpope/vim-surround",target:"_blank",rel:"noopener noreferrer"}},[t._v("tpope/vim-surround"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/tpope/vim-repeat",target:"_blank",rel:"noopener noreferrer"}},[t._v("tpope/vim-repeat"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/terryma/vim-multiple-curstomtom/tcomment_vim",target:"_blank",rel:"noopener noreferrer"}},[t._v("terryma/vim-multiple-curstomtom/tcomment_vim"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/MarcWeber/vim-addon-mw-utils",target:"_blank",rel:"noopener noreferrer"}},[t._v("MarcWeber/vim-addon-mw-utils"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/tomtom/tlib_vim",target:"_blank",rel:"noopener noreferrer"}},[t._v("tomtom/tlib_vim"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/garbas/vim-snipmate",target:"_blank",rel:"noopener noreferrer"}},[t._v("garbas/vim-snipmate"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/honza/vim-snippets",target:"_blank",rel:"noopener noreferrer"}},[t._v("honza/vim-snippets"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/majutsushi/tagbar",target:"_blank",rel:"noopener noreferrer"}},[t._v("majutsushi/tagbar"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/mileszs/ack.vim",target:"_blank",rel:"noopener noreferrer"}},[t._v("mileszs/ack.vim"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/airblade/vim-gitgutter",target:"_blank",rel:"noopener noreferrer"}},[t._v("airblade/vim-gitgutter"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"vim-plug"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vim-plug"}},[t._v("#")]),t._v(" vim-plug")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/junegunn/vim-plug",target:"_blank",rel:"noopener noreferrer"}},[t._v("VimPlug"),a("OutboundLink")],1),t._v(" 是一个 Vim 插件管理器，利用异步并行的方式可以快速地安装、更新和卸载插件。")]),t._v(" "),a("p",[t._v("安装：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 下载核心文件放置到 .vim/autoload 目录下")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -fLo ~/.vim/autoload/plug.vim --create-dirs "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim\n")])])]),a("p",[t._v("使用：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在 .vimrc 文件中配置需要安装的插件")]),t._v("\ncall plug"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#begin('~/.vim/plugged')")]),t._v('\n  " Shorthand notation'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" fetches https://github.com/junegunn/vim-easy-align\n  Plug "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'junegunn/vim-easy-align'")]),t._v("\ncall plug"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#end()")]),t._v("\n")])])]),a("p",[t._v("最后执行 "),a("code",[t._v(":PlugInstall")]),t._v(" 安装列出的所有插件，更多方式可以参考官方说明。")]),t._v(" "),a("h2",{attrs:{id:"vim-airline"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vim-airline"}},[t._v("#")]),t._v(" vim-airline")]),t._v(" "),a("p",[a("code",[t._v("vim-airline")]),t._v(" 是一款状态栏美化插件。")]),t._v(" "),a("p",[t._v("默认的样式是比较简单，如果需要更美观的样式需要下载字体 Powerline fonts 进行配置：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# clone")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/powerline/fonts.git --depth"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# install")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" fonts\n./install.sh\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# clean-up a bit")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" -rf fonts\n")])])]),a("p",[t._v("启用：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# .vimrc")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("let")]),t._v(" g:airline_powerline_fonts "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),a("p",[t._v("最后，修改终端配置中使用的字体为 "),a("code",[t._v("xxx for Powerline")]),t._v("，完成后就可以看到效果啦。")]),t._v(" "),a("p",[t._v("默认情况下，插件关闭了对 Tab 标签的美化，如果需要的话也可以开启：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# .vimrc")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("let")]),t._v(" g:airline"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#extensions#tabline#enabled = 1")]),t._v("\n")])])]),a("p",[t._v("另外，使用该插件之后之后加上 Vim 本身会显示当前模式，两者会有重复，我们可以关闭默认的：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# .vimrc")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" noshowmode\n")])])]),a("h2",{attrs:{id:"nerdtree"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nerdtree"}},[t._v("#")]),t._v(" nerdtree")]),t._v(" "),a("p",[t._v("NERDTree 可以列出当前路径的目录树。")]),t._v(" "),a("p",[t._v("默认的可以使用 "),a("code",[t._v(":NERDTreeToggle")]),t._v(" 指令来打开和关闭目录树，为了方面你可以设置自己喜欢的按键映射：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# .vimrc")]),t._v("\nmap "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("C-n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" :NERDTreeToggle"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("CR"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("常用配置：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# .vimrc")]),t._v("\nautocmd vimenter * NERDTree "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 自动打开 NERDTree")]),t._v("\nNERDTreeMinimalUI "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 关闭目录树上面的 `..` 和帮助提示")]),t._v("\n")])])]),a("p",[t._v("对于自动打开可以更有好点：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# .vimrc")]),t._v("\nautocmd StdinReadPre * "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("let")]),t._v(" s:std_in"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nautocmd VimEnter * "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" argc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("exists"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"s:std_in"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NERDTree "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" endif\n")])])]),a("p",[t._v("使用这里的配置替代上面的 "),a("code",[t._v("autocmd vimenter * NERDTree")]),t._v(" 就可以只在使用 Vim 且没有指定文件时自动打开。")]),t._v(" "),a("p",[t._v("常用快捷键：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("ctrl + w + h "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 光标 focus 左侧树形目录")]),t._v("\nctrl + w + l "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 光标 focus 右侧文件显示窗口")]),t._v("\nctrl + w + w "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 光标自动在左右侧窗口切换")]),t._v("\n\nx "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 合拢选中结点的父目录")]),t._v("\nX "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 递归合拢选中结点下的所有目录")]),t._v("\no "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在已有窗口中打开文件、目录或书签，并跳到该窗口")]),t._v("\nt "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在新 Tab 中打开选中文件/书签，并跳到新 Tab")]),t._v("\nm "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示更多的操错菜单")]),t._v("\nu "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 以上级目录为根")]),t._v("\nC "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 以当前目录作为根")]),t._v("\n")])])]),a("p",[t._v("有个问题时，如果左边只剩下目录树时，使用 "),a("code",[t._v("q")]),t._v(" 关闭时还是会剩下一个窗口，当然你可以使用 "),a("code",[t._v("qa")]),t._v(" 来进行关闭，或者是做一下额外的配置：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# .vimrc")]),t._v("\nautocmd bufenter * "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("winnr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" exists"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b:NERDTree"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" b:NERDTree.isTabTree"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" q "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" endif\n")])])]),a("p",[t._v("最后，需要说明的是默认情况下不会显示以点开头的文件，需要的话，可以使用快捷键 I 进行切换。")]),t._v(" "),a("h2",{attrs:{id:"ctrlp-vim"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ctrlp-vim"}},[t._v("#")]),t._v(" ctrlp.vim")]),t._v(" "),a("p",[a("code",[t._v("ctrlp.vim")]),t._v(" 可以模糊搜索文件。")]),t._v(" "),a("p",[t._v("进入搜索模式：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("leader"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("f   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 模糊搜索最近打开的文件(MRU)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("leader"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("p   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 模糊搜索当前目录及其子目录下的所有文件")]),t._v("\n")])])]),a("p",[t._v("操作搜索结果：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("ctrl + j/k  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进行上下选择")]),t._v("\nctrl + x    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在当前窗口水平分屏打开文件")]),t._v("\nctrl + "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("v")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 同上, 垂直分屏")]),t._v("\nctrl + t    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在 Tab 中打开")]),t._v("\n")])])]),a("p",[t._v("使用 "),a("code",[t._v("<Ctrl-d>")]),t._v(" 在 路径匹配和文件名匹配之间切换，通过设置 "),a("code",[t._v("let g:ctrlp_by_filename = 1")]),t._v(" 来设置默认使用文件名匹配模式进行模糊搜索。")]),t._v(" "),a("p",[t._v("另外，你也可以配置忽略某些文件或目录：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# .vimrc")]),t._v('\n" Exclude files and directories\n'),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("let")]),t._v(" g:ctrlp_custom_ignore "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dir'")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\v[\\/]\\.(git|hg|svn)$|tmp$|node_modules$'")]),t._v(",\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'file'")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\v\\.(exe|so|dll)$'")]),t._v(",\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"vim-surround"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vim-surround"}},[t._v("#")]),t._v(" vim-surround")]),t._v(" "),a("p",[t._v("快速给词加环绕符号，例如单引号/双引号/括号/成对标签等。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 添加(ys=you surround): ysiw"')]),t._v("\nHello -"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 添加: csw"')]),t._v("\nHello -"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 添加-当前到行尾: ys$"')]),t._v("\nHello world -"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello world"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 添加-整行: yss"')]),t._v("\nHello world -"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello world"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# ySS"')]),t._v("\nHello world -"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\n    hello world\n"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 替换: cs\"'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello world!"')]),t._v(" -"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello world!'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 删除: ds"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello world!"')]),t._v(" -"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Hello world"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 替换-标签(t=tag): cst"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("abc"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("/a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  -"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),t._v("\n\ncst"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("html"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("abc"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("/a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  -"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("html"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("abc"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("/html"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 添加-两个词: veeS"')]),t._v("\nhello world -"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 左符号/右符号 => 带不带空格")]),t._v("\ncs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hello"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" -"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" hello "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\ncs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hello"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" -"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("hello"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("h2",{attrs:{id:"vim-repeat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vim-repeat"}},[t._v("#")]),t._v(" vim-repeat")]),t._v(" "),a("p",[t._v("你一定清楚 Vim 中的 "),a("code",[t._v(".")]),t._v(" 操作，比如使用 "),a("code",[t._v("diw")]),t._v(" 删除了一个 "),a("code",[t._v("word")]),t._v("，可以使用 "),a("code",[t._v(".")]),t._v(" 自动删除又一个 "),a("code",[t._v("word")]),t._v("。")]),t._v(" "),a("p",[t._v("与 "),a("code",[t._v(".")]),t._v(" 操作类似，但 "),a("code",[t._v("vim-repeat")]),t._v(" 要强大的多。")]),t._v(" "),a("h2",{attrs:{id:"vim-multiple-cursors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vim-multiple-cursors"}},[t._v("#")]),t._v(" vim-multiple-cursors")]),t._v(" "),a("p",[t._v("提供多行编辑功能。")]),t._v(" "),a("p",[t._v("进入 VISUAL 模式，选择要匹配的范围，然后使用 "),a("code",[t._v("Ctrl+n")]),t._v(" 继续选择下一个，选择完成后按下 Esc 结束选择，最后进入编辑模式，就是多行编辑了。")]),t._v(" "),a("p",[t._v("编辑完成后按下两次 Esc 回到正常模式。")]),t._v(" "),a("h2",{attrs:{id:"refs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#refs"}},[t._v("#")]),t._v(" Refs")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://segmentfault.com/a/1190000015143474",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vim 的 NerdTree 插件 - Solomon's 技术专栏 - SegmentFault 思否"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://wklken.me/posts/2015/06/13/vim-plugin-surround-repeat.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("vim 插件: surround & repeat[成对符号编辑]"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=r.exports}}]);