(window.webpackJsonp=window.webpackJsonp||[]).push([[251],{668:function(t,s,a){"use strict";a.r(s);var n=a(62),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"模块机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块机制"}},[t._v("#")]),t._v(" 模块机制")]),t._v(" "),a("p",[t._v("在 Node.js 诞生之初 JavaScript 缺乏标准的模块机制，为了弥补这一缺陷社区陆续提出了一些规范，其中 CommonJS 规范并是 Node.js 采用的模块机制。")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/images/nodejs/advanced/commonjs-js.png"),alt:"CommonJS"}}),t._v(" "),a("h2",{attrs:{id:"commonjs-的模块规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commonjs-的模块规范"}},[t._v("#")]),t._v(" CommonJS 的模块规范")]),t._v(" "),a("p",[t._v("CommonJS 对模块的定义十分简单，主要分为模块定义、模块引用和模块标识 3 个部分。")]),t._v(" "),a("ul",[a("li",[t._v("模块定义")])]),t._v(" "),a("p",[t._v("在模块中，上下文提供了 "),a("code",[t._v("module")]),t._v(" 对象，它上面的的 "),a("code",[t._v("exports")]),t._v(" 属性也是一个对象，用于导出当前模块的方法或者变量，并且它是唯一导出的出口。")]),t._v(" "),a("p",[t._v("在 Node 中，一个文件就是一个模块，将方法挂载在 "),a("code",[t._v("exports")]),t._v(" 对象上作为属性即可定义导出的方式：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// math.js")]),t._v("\nexports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("num1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" num1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" num2\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("模块引用")])]),t._v(" "),a("p",[t._v("在 CommonJS 规范中，模块上下文同时提供了 "),a("code",[t._v("require()")]),t._v(" 方法，这个方法接受模块标识，以此引入一个模块的 API 到当前上下文中。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" math "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'math'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以省略 .js 后缀")]),t._v("\n")])])]),a("ul",[a("li",[t._v("模块标识")])]),t._v(" "),a("p",[t._v("模块标识其实就是传递给 "),a("code",[t._v("require()")]),t._v(" 方法的参数，它必须是符合小驼峰命名的字符串，或者以 "),a("code",[t._v(".")]),t._v(" 或 "),a("code",[t._v("..")]),t._v(" 开头的相对路径，或者绝对路径。")]),t._v(" "),a("h2",{attrs:{id:"node-的模块实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-的模块实现"}},[t._v("#")]),t._v(" Node 的模块实现")]),t._v(" "),a("p",[t._v("Node 模块主要分为 2 类：")]),t._v(" "),a("ul",[a("li",[t._v("Node 提供的核心模块（在 Node 源代码编译时编译进了二进制执行文件，当 Node 启动时核心模块被直接加载到内存中）；")]),t._v(" "),a("li",[t._v("用户编写的文件模块。")])]),t._v(" "),a("p",[t._v("在的模块实现上对规范有一定的取舍和扩展，在引入模块时通常需要经历 3 个步骤：")]),t._v(" "),a("ul",[a("li",[t._v("路径分析；")]),t._v(" "),a("li",[t._v("路径定位；")]),t._v(" "),a("li",[t._v("编译执行。")])]),t._v(" "),a("p",[t._v("定位到具体的文件后，Node 会新建一个模块对象，然后根据路径载入并编译。对于不同的文件扩展名，其载入方法也有所不同：")]),t._v(" "),a("ul",[a("li",[t._v(".js 文件。通过 fs 模块同步读取文件后编译执行；")]),t._v(" "),a("li",[t._v(".node 文件。这是用 C/C++编写的扩展文件，通过 "),a("code",[t._v("dlopen()")]),t._v(" 方法加载最后编译生成的文件；")]),t._v(" "),a("li",[t._v(".json 文件。通过 fs 模块同步读取文件后，用 "),a("code",[t._v("JSON.parse()")]),t._v(" 解析返回结果；")]),t._v(" "),a("li",[t._v("其余扩展名文件。它们都被当做.js 文件载入。")])]),t._v(" "),a("h2",{attrs:{id:"核心模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#核心模块"}},[t._v("#")]),t._v(" 核心模块")]),t._v(" "),a("p",[t._v("核心模块分为 C/C++ 编写和 JavaScript 编写的 2 部分，其中 C/C++存放在 Node 项目的 src 目录下，JavaScript 文件存放在 lib 目录下。")]),t._v(" "),a("h3",{attrs:{id:"javascript-核心模块的编译"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-核心模块的编译"}},[t._v("#")]),t._v(" JavaScript 核心模块的编译")]),t._v(" "),a("p",[t._v("在编译所有 C/C++ 文件之前，编译程序需要将所有的 JavaScript 模块文件编译为 C/C++ 代码。")]),t._v(" "),a("p",[t._v("Node 采用了 V8 附带的 js2v.py 工具，将所有内置的 JavaScript 代码（"),a("code",[t._v("src/node.js")]),t._v(" 和 "),a("code",[t._v("lib/*.js")]),t._v("）转换成 C++里的数组，生成 node_natives.h 头文件。")]),t._v(" "),a("p",[t._v("此时 JavaScript 代码以字符串的形式存储在 node 命名空间中，是不可执行的。在启动 Node 进程时，JavaScript 代码直接加载到内存中。")]),t._v(" "),a("p",[t._v("这些模块也没有定义 require、module、exports 这些变量。在引入 JavaScript 核心模块的过程中，也经历了头尾包装的过程，然后才执行和导出了 exports 对象。")]),t._v(" "),a("p",[t._v("JavaScript 核心模块的定义如下面的代码所示，源文件通过 "),a("code",[t._v("process.binding('natives')")]),t._v(" 取出，编译成功的模块缓存到 "),a("code",[t._v("NativeModule._cache")]),t._v(" 对象上，文件模块则缓存到 "),a("code",[t._v("Module._cache")]),t._v(" 对象上：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("NativeModule")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("filename "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.js'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" id\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("loaded "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nNativeModule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_source "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("binding")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'natives'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nNativeModule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_cache "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"c-c-核心模块的编译"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c-c-核心模块的编译"}},[t._v("#")]),t._v(" C/C++ 核心模块的编译")]),t._v(" "),a("p",[t._v("核心模块中有的模块部分由 C/C++ 编写，有的模块全由 C/C++ 编写，这种全由 C/C++ 编写的模块称为内建模块。")]),t._v(" "),a("p",[t._v("内建模块通常不被用户直接调用，像 Node 的 buffer、crypto、evals、fs、os 等模块都是部分通过 C/C++编写的。")]),t._v(" "),a("p",[t._v("在 Node 中，内建模块的内部结构定义如下：")]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("node_module_struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" version"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("dso_handle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("filename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("register_func"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v8"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("Handle"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("v8"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("modname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("每一个内建模块在定义之后，都通过 NODE_MODULE 宏将模块定义到 node 命名空间中，模块的具体初始化方法挂载为结构的 register_func 成员：")]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name function"}},[t._v("NODE_MODULE")]),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("modname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" regfunc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extern")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"C"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  NODE_MODULE_EXPORT node"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("node_module_struct modname ## _module "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    NODE_STANDARD_MODULE_STUFF"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    regfunc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("NODE_STRINGIFY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("modname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("node_extensions.h 文件将这些散列的内建模块统一放进了一个叫 node_module_list 的数组中，Node 提供了 "),a("code",[t._v("get_builtin_module()")]),t._v(" 方法从 node_module_list 数组中取出这些模块。")]),t._v(" "),a("h4",{attrs:{id:"内建模块的导出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内建模块的导出"}},[t._v("#")]),t._v(" 内建模块的导出")]),t._v(" "),a("p",[t._v("在 Node 的所有模块类型中，文件模块可能会依赖核心模块，核心模块可能会依赖内建模块。")]),t._v(" "),a("img",{attrs:{height:"200",src:t.$withBase("/images/nodejs/advanced/module-order.png"),alt:"Module Order"}}),t._v(" "),a("p",[t._v("Node 在启动时，会生成一个全局变量 process，并提供 "),a("code",[t._v("Binding()")]),t._v(" 方法来协助加载内建模块。"),a("code",[t._v("Binding()")]),t._v(" 的实现代码在 "),a("code",[t._v("src/node.cc")]),t._v(" 中。")]),t._v(" "),a("p",[t._v("其中在加载内建模块时，会先创建一个 exports 空对象，然后调用 "),a("code",[t._v("get_builtin_module()")]),t._v(" 方法取出内建模块对象，通过执行 "),a("code",[t._v("register_func()")]),t._v(" 填充 exports 对象，最后将 exports 对象按模块名缓存，并返回给调用方完成导出。")]),t._v(" "),a("p",[t._v("所以从 JavaScript 到 C/C++ 的过程是相当复杂的，需要经历 C/C++ 层面的内建模块定义、（JavaScript）核心模块的定义和引入以及（JavaScript）文件模块层面的引入：")]),t._v(" "),a("img",{attrs:{height:"320",src:t.$withBase("/images/nodejs/advanced/native-module.png"),alt:"Native Module"}}),t._v(" "),a("h4",{attrs:{id:"编写核心模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编写核心模块"}},[t._v("#")]),t._v(" 编写核心模块")]),t._v(" "),a("p",[t._v("编写内建模块通常分两步完成：编写头文件和编写 C/C++ 文件。")]),t._v(" "),a("p",[t._v("以实现下面 JavaScript 代码所示的简单功能为例：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("exports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("sayHello")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello world!'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("(1) 将以下代码保存为 node_hello.h，存放到 Node 的 src 目录下：")]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("ifndef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("NODE_HELLO_H_")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("NODE_HELLO_H_")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<v8.h>")])]),t._v("\nnamespace node "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 预定义方法")]),t._v("\n v8"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("Handle"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("v8"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("Value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SayHello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" v8"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("Arguments"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n")])])]),a("p",[t._v("(2) 编写 node_hello.cc，并存储到 src 目录下：")]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<node.h>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<node_hello.h>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<v8.h>")])]),t._v("\nnamespace node "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\nusing namespace v8"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实现预定义的方法")]),t._v("\nHandle"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SayHello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Arguments"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n HandleScope scope"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" scope"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("New")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello world!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 给传入的目标对象添加sayHello方法")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Init_Hello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Handle"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n target"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewSymbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sayHello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" FunctionTemplate"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("New")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SayHello"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetFunction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用NODE_MODULE()将注册方法定义到内存中")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("NODE_MODULE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node_hello"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" node"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("Init_Hello"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("以上两步完成了内建模块的编写，还需要更改 "),a("code",[t._v("src/node_extensions.h")]),t._v(" 让 Node 认为它是内建模块，在 NODE_EXT_LIST_END 前添加 NODE_EXT_LIST_ITEM(node_hello) ，以将 node_hello 模块添加进 node_module_list 数组中。")]),t._v(" "),a("p",[t._v("其次，还需要让编写的两份代码编译进执行文件，同时需要更改 Node 的项目生成文件 node.gyp，并在 "),a("code",[t._v("'target_name': 'node'")]),t._v(" 节点的 sources 中添加上新编写的两个文件。然后编译整个 Node 项目。")]),t._v(" "),a("h2",{attrs:{id:"c-c-扩展模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c-c-扩展模块"}},[t._v("#")]),t._v(" C/C++扩展模块")]),t._v(" "),a("p",[t._v("C/C++ 扩展模块属于文件模块中的一类，它通过预先编译为 .node 文件，然后调用 "),a("code",[t._v("process.dlopen()")]),t._v(" 方法加载执行。")]),t._v(" "),a("p",[t._v("Node 的原生模块一定程度上是可以跨平台的，这是因为在编译时根据系统的差异会被编译成不同的文件，在 Windows 下它是一个 .dll 文件，在 "),a("code",[t._v("*nix")]),t._v(" 下则是一个 .so 文件。")]),t._v(" "),a("img",{attrs:{height:"410",src:t.$withBase("/images/nodejs/advanced/point-node.png"),alt:"Point Node"}}),t._v(" "),a("h3",{attrs:{id:"c-c-扩展模块的编写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c-c-扩展模块的编写"}},[t._v("#")]),t._v(" C/C++ 扩展模块的编写")]),t._v(" "),a("p",[t._v("普通的扩展模块与内建模块的区别在于无须将源代码编译进 Node，而是通过 "),a("code",[t._v("dlopen()")]),t._v(" 方法动态加载。")]),t._v(" "),a("p",[t._v("同样是前面内建模块的例子，首先新建 hello 目录作为自己的项目位置，编写 hello.cc 并将其存储到 src 目录下，相关代码如下：")]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<node.h>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<v8.h>")])]),t._v("\nusing namespace v8"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实现预定义的方法")]),t._v("\nHandle"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SayHello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Arguments"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n HandleScope scope"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" scope"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("New")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello world!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 给传入的目标对象添加sayHello()方法")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Init_Hello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Handle"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n target"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewSymbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sayHello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" FunctionTemplate"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("New")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SayHello"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetFunction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用NODE_MODULE()方法将注册方法定义到内存中")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("NODE_MODULE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hello"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Init_Hello"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"c-c-扩展模块的编译"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c-c-扩展模块的编译"}},[t._v("#")]),t._v(" C/C++ 扩展模块的编译")]),t._v(" "),a("p",[t._v("在 GYP 工具的帮助下，C/C++ 扩展模块的编译是一件省心的事情，无须为每个平台编写不同的项目编译文件。")]),t._v(" "),a("p",[t._v("写好 .gyp 项目文件是除编码外的头等大事，node-gyp 约定 .gyp 文件为 binding.gyp，其内容如下所示：")]),t._v(" "),a("div",{staticClass:"language-gyp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("{\n  'targets': [\n    {\n      'target_name': 'hello',\n      'sources': ['src/hello.cc'],\n      'conditions': [\n        [\n          'OS == 'win',\n          {\n            'libraries': ['-lnode.lib']\n          }\n        ]\n      ]\n    }\n  ]\n}\n")])])]),a("p",[t._v("然后调用：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("node-gyp configure "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" node-gyp build\n")])])]),a("p",[t._v("在当前目录中创建 build 目录，并生成系统相关的项目文件。后者则会进行编译，编译完成后，hello.node 文件会生成在 "),a("code",[t._v("build/Release")]),t._v(" 目录下。")]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("C/C++ 内建模块属于最底层的模块，它属于核心模块，主要提供 API 给 JavaScript 核心模块和第三方 JavaScript 文件模块调用。")]),t._v(" "),a("p",[t._v("JavaScript 核心模块主要扮演的职责有两类：一类是作为 C/C++ 内建模块的封装层和桥接层，供文件模块调用；一类是纯粹的功能模块。")]),t._v(" "),a("p",[t._v("文件模块通常由第三方编写，包括普通 JavaScript 模块和 C/C++ 扩展模块，主要调用方向为普通 JavaScript 模块调用扩展模块。")]),t._v(" "),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://nodejs.org/dist/latest-v16.x/docs/api/addons.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("C++ addons | Node.js v16.17.1 Documentation"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);