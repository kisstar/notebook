(window.webpackJsonp=window.webpackJsonp||[]).push([[126],{538:function(t,a,s){"use strict";s.r(a);var e=s(62),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"跨域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#跨域"}},[t._v("#")]),t._v(" 跨域")]),t._v(" "),s("p",[t._v("对于前端的同学来说，跨域是一个老生常谈的问题，无论是在面试还是在工作中，总会涉及到跨域的问题。")]),t._v(" "),s("h2",{attrs:{id:"什么是跨域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是跨域"}},[t._v("#")]),t._v(" 什么是跨域")]),t._v(" "),s("p",[t._v("要了解跨域首先需要知道同源的概念。")]),t._v(" "),s("p",[t._v("那么什么是同源呢？如果两个页面的协议，端口（如果有指定）和域名都相同，则两个页面具有相同的源。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("domain "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印当前页面的源，默认端口为 80")]),t._v("\n")])])]),s("p",[t._v("浏览器根据同源设置了同源策略，该策略限制了从同一个源加载的文档或脚本如何与来自另一个源的资源进行交互。这是一个用于隔离潜在恶意文件的重要安全机制。")]),t._v(" "),s("p",[t._v("那么现在跨域的概念也就很明显了，那就是不同源之间的交互。")]),t._v(" "),s("h2",{attrs:{id:"跨域存在的意义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#跨域存在的意义"}},[t._v("#")]),t._v(" 跨域存在的意义")]),t._v(" "),s("p",[t._v("那么存在即有意义，是什么导致了跨域问题的诞生？")]),t._v(" "),s("p",[t._v("没有同源策略限制的接口请求会发生什么？当你在一个网站登录后，如果设置了 "),s("code",[t._v("cookie")]),t._v("，那么登录成功后服务端验证通过后会在响应头加入 "),s("code",[t._v("Set-Cookie")]),t._v(" 字段，然后下次再发请求的时候，浏览器会自动将 "),s("code",[t._v("cookie")]),t._v(" 附加在 HTTP 请求的头字段 "),s("code",[t._v("Cookie")]),t._v(" 中，服务端就能知道这个用户已经登录过。")]),t._v(" "),s("p",[t._v("登录期间，如果你再点击打开另一个网页，那么这个新打开的网页中的脚本就可以向之前登录过的网页的服务器发起请求，相当于登录了你的账号，后果不堪设想。")]),t._v(" "),s("p",[t._v("可能会疑惑的是 "),s("code",[t._v("cookie")]),t._v(" 是明文的，不一样可以进行操作吗？服务端可以设置 "),s("code",[t._v("httpOnly")]),t._v("，使得前端无法操作 "),s("code",[t._v("cookie")]),t._v("。")]),t._v(" "),s("p",[t._v("另外，没有同源策略的限制，其它网站可以直接拿到别的网站的 DOM。")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- HTML --\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("iframe")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("lll"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("www.lll.com"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("iframe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- JavaScript --\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}},[s("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// wwww.lIl.com 获取在 www.lll.com 输入的账号和密码")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" iframe "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("frames"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lll'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" username "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" iframe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#username'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" passworld "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" iframe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#passworld'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// do some bad things...")]),t._v("\n")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("因此一些钓鱼网站就可以将其它（比如银行）网页引入自己的不法网站中，获取你输入的账号和密码，然后。。。")]),t._v(" "),s("h2",{attrs:{id:"如何解决跨域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何解决跨域"}},[t._v("#")]),t._v(" 如何解决跨域")]),t._v(" "),s("p",[t._v("跨域的解决方式有许多种，常见的包括 JSONP、空 "),s("code",[t._v("iframe")]),t._v(" 加 "),s("code",[t._v("form")]),t._v("、CORS 和 Web Sockets 等，接下来就来了解一下这些跨域的正确打开方式。")]),t._v(" "),s("h3",{attrs:{id:"跨源资源共享"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#跨源资源共享"}},[t._v("#")]),t._v(" 跨源资源共享")]),t._v(" "),s("p",[t._v("CORS（Cross-Origin Resource Sharing，跨源资源共享）就是使用自定义的 HTTP 头部让浏览器与服务器进行沟通，从而决定请求或响应是应该成功，还是应该失败。")]),t._v(" "),s("p",[t._v("在发送 GET 或 POST 请求时，需要给它附加一个额外的 "),s("code",[t._v("Origin")]),t._v(" 头部，其中包含请求页面的源信息（协议、域名和端口），以便服务器根据这个头部信息来决定是否给予响应。")]),t._v(" "),s("p",[t._v("下面是 "),s("code",[t._v("Origin")]),t._v(" 头部的一个示例：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Origin")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" http"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("www"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("anani"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("net\n")])])]),s("p",[t._v("如果服务器认为这个请求可以接受，就在 "),s("code",[t._v("Access-Control-Allow-Origin")]),t._v(' 头部中回发相同的源信息（如果是公共资源，可以回发 "*"）。')]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("Access"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Control"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Allow"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Origin"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" http"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("www"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("anani"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("net\n")])])]),s("p",[t._v("如果没有这个头部，或者有这个头部但源信息不匹配，浏览器就会驳回请求。")]),t._v(" "),s("ul",[s("li",[t._v("注意，请求和响应都不包含 "),s("code",[t._v("cookie")]),t._v(" 信息。")]),t._v(" "),s("li",[t._v("不能使用 "),s("code",[t._v("setRequestHeader()")]),t._v(" 设置自定义头部。")]),t._v(" "),s("li",[t._v("调用 "),s("code",[t._v("getAllResponseHeaders()")]),t._v(" 方法总会返回空字符串。")]),t._v(" "),s("li",[t._v("微软在 IE8 中引入了 XDR（XDomainRequest）类型，与 XHR 对象类似，但能实现安全可靠的跨域通信。\n"),s("ul",[s("li",[s("code",[t._v("cookie")]),t._v(" 不会随请求发送，也不会随响应返回。")]),t._v(" "),s("li",[t._v("只能设置请求头部信息中的 "),s("code",[t._v("Content-Type")]),t._v(" 字段。")]),t._v(" "),s("li",[t._v("不能访问响应头部信息。")]),t._v(" "),s("li",[t._v("只支持 GET 和 POST 请求。")])])])]),t._v(" "),s("h4",{attrs:{id:"使用方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用方式"}},[t._v("#")]),t._v(" 使用方式")]),t._v(" "),s("p",[t._v("对于开发者来说，CORS 通信与同源的 AJAX 通信没有差别，代码完全一样。浏览器一旦发现 AJAX 请求跨源，就会自动添加一些附加的头信息，有时还会多出一次附加的请求。")]),t._v(" "),s("p",[t._v("浏览器将 CORS 请求分成两类：简单请求（simple request）和非简单请求（not-so-simple request）。只要同时满足以下两大条件，就属于简单请求：")]),t._v(" "),s("p",[t._v("1、请求方法是以下三种方法之一：")]),t._v(" "),s("ul",[s("li",[t._v("HEAD")]),t._v(" "),s("li",[t._v("GET")]),t._v(" "),s("li",[t._v("POST")])]),t._v(" "),s("p",[t._v("2、HTTP 的头信息不超出以下几种字段：")]),t._v(" "),s("ul",[s("li",[t._v("Accept")]),t._v(" "),s("li",[t._v("Accept-Language")]),t._v(" "),s("li",[t._v("Content-Language")]),t._v(" "),s("li",[t._v("Last-Event-ID")]),t._v(" "),s("li",[t._v("Content-Type：只限于三个值 application/x-www-form-urlencoded、multipart/form-data、text/plain")])]),t._v(" "),s("p",[t._v("对于普通请求和复杂请求浏览器的处理方式不一样，更多信息参考 "),s("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2016/04/cors.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("跨域资源共享 CORS 详解"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("p",[t._v("默认情况下，跨源请求不提供凭据（cookie、HTTP 认证及客户端 SSL 证明等）。通过将 "),s("code",[t._v("withCredentials")]),t._v(" 属性设置为 "),s("code",[t._v("true")]),t._v("，可以指定某个请求应该发送凭据。如果服务器接受带凭据的请求，会用下面的 HTTP 头部来响应。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("Access"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Control"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Allow"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Credentials"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n")])])]),s("p",[t._v("另一方面，开发者必须在 AJAX 请求中打开 "),s("code",[t._v("withCredentials")]),t._v(" 属性。否则，即使服务器同意发送 "),s("code",[t._v("Cookie")]),t._v("，浏览器也不会发送。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" xhr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("XMLHttpRequest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nxhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("withCredentials "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n")])])]),s("p",[t._v("或者，服务器要求设置 "),s("code",[t._v("Cookie")]),t._v("，浏览器也不会处理。但是，如果省略 "),s("code",[t._v("withCredentials")]),t._v(" 设置，有的浏览器还是会一起发送 "),s("code",[t._v("Cookie")]),t._v("。这时，可以显式关闭 "),s("code",[t._v("withCredentials")]),t._v("。")]),t._v(" "),s("p",[t._v("需要注意的是，如果要发送 "),s("code",[t._v("Cookie")]),t._v("，"),s("code",[t._v("Access-Control-Allow-Origin")]),t._v(" 就不能设为星号，必须指定明确的、与请求网页一致的域名。")]),t._v(" "),s("p",[t._v("同时，"),s("code",[t._v("Cookie")]),t._v(" 依然遵循同源政策，只有用服务器域名设置的 "),s("code",[t._v("Cookie")]),t._v(" 才会上传，其他域名的 "),s("code",[t._v("Cookie")]),t._v(" 并不会上传，且（跨源）原网页代码中的 "),s("code",[t._v("document.cookie")]),t._v(" 也无法读取服务器域名下的 "),s("code",[t._v("Cookie")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"图像-ping"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#图像-ping"}},[t._v("#")]),t._v(" 图像 Ping")]),t._v(" "),s("p",[t._v("我们知道，一个网页可以从任何网页中加载图像，不用担心跨域不跨域。这也是在线广告跟踪浏览量的主要方式。因此可以动态地创建图像，使用它们的 "),s("code",[t._v("onload")]),t._v(" 和 "),s("code",[t._v("onerror")]),t._v(" 事件处理程序来确定是否接收到了响应。")]),t._v(" "),s("p",[t._v("图像 Ping 是与服务器进行简单、单向的跨域通信的一种方式。请求的数据是通过查询字符串形式发送的，而响应可以是任意内容，但通常是像素图或 204 响应。")]),t._v(" "),s("p",[t._v("通过图像 Ping，浏览器得不到任何具体的数据，但通过侦听 "),s("code",[t._v("load")]),t._v(" 和 "),s("code",[t._v("error")]),t._v(" 事件，它能知道响应是什么时候接收到的。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" img "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nimg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onload "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" img"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onerror")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'done'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nimg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://www.anani.com/image?name=anani'")]),t._v("\n")])])]),s("p",[t._v("图像 Ping 有两个主要的缺点，一是只能发送 GET 请求，二是无法访问服务器的响应文本。因此，图像 Ping 只能用于浏览器与服务器间的单向通信。")]),t._v(" "),s("p",[t._v("跟图像 Ping 类似的技术还有 "),s("code",[t._v("link")]),t._v(" 和 "),s("code",[t._v("iframe(iframe + form)")]),t._v("，它们都能发出跨域请求，后者更能使用 POST 方法，但是都是只能用于浏览器与服务器间的单向通信。")]),t._v(" "),s("h3",{attrs:{id:"jsonp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jsonp"}},[t._v("#")]),t._v(" JSONP")]),t._v(" "),s("p",[t._v("JSONP 是通过动态 "),s("code",[t._v("<script>")]),t._v(" 元素来使用的，使用时可以为 "),s("code",[t._v("src")]),t._v(" 属性指定一个跨域 URL，它主要由两部分组成：回调函数和数据。")]),t._v(" "),s("p",[t._v("回调函数是当响应到来时应该在页面中调用的函数。回调函数的名字一般是在请求中指定的。而数据就是传入回调函数中的 JSON 数据。下面是一个典型的 JSONP 请求的封装：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {string} url 请求地址\n * @param {object} params 请求参数\n * @param {function} callback 请求成功后的回调函数，请求成功后默认将获取的数据作为参数传入执行\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("jsonp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 辅助函数")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addURLParam")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    url "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'?'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'?'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'&'")]),t._v("\n    url "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("encodeURIComponent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'='")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("encodeURIComponent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" url\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getQueryStringParams")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" params")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("keys")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      url "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addURLParam")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" url\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明全局处理函数")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" funName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Jsonp_'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n    Date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n    Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("random")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("substr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("funName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("funName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeChild")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建 script 标签发送请求")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" script "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'script'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  script"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getQueryStringParams")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'&callback'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" funName\n  document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("与图像 Ping 相比，它的优点在于能够直接访问响应文本，支持在浏览器与服务器之间双向通信。但是")]),t._v(" "),s("ul",[s("li",[t._v("JSONP 是从其他域中加载代码执行的，如果其他域不安全，很可能会在响应中夹带一些恶意代码，而此时除了完全放弃 JSONP 调用之外，没有办法追究。")]),t._v(" "),s("li",[t._v("要确定 JSONP 请求是否失败并不容易。虽然 HTML5 给 "),s("code",[t._v("<script>")]),t._v(" 元素新增了一个 "),s("code",[t._v("onerror")]),t._v(" 事件处理程序，但目前还没有得到任何浏览器支持。")])]),t._v(" "),s("h3",{attrs:{id:"web-sockets"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#web-sockets"}},[t._v("#")]),t._v(" Web Sockets")]),t._v(" "),s("p",[t._v("Web Sockets 的目标是在一个单独的 持久连接上提供全双工、双向通信。")]),t._v(" "),s("p",[t._v("在 JavaScript 中创建了 Web Socket 之后，会有一个 HTTP 请求发送到浏览器以发起连接。在取得服务器响应后，建立的连接会使用 HTTP 升级从 HTTP 协议交换为 Web Socket 协议。")]),t._v(" "),s("p",[t._v("Web Sockets 使用了自定义的协议， 所以 URL 模式也略有不同。 未加密的连接是 "),s("code",[t._v("ws://")]),t._v("；加密的连接是 "),s("code",[t._v("wss://")]),t._v("。在使用 Web Socket URL 时，必须带着这个模式，因为将来还有可能支持其他模式。")]),t._v(" "),s("p",[t._v("要创建 Web Socket，先实例一个 WebSocket 对象并传入要连接的 URL：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" socket "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebSocket")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ws://www.example.com/server.php'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("实例化了 WebSocket 对象后，浏览器就会马上尝试创建连接。与 XHR 类似，WebSocket 也有一个表示当前状态的 "),s("code",[t._v("readyState")]),t._v(" 属性：")]),t._v(" "),s("ul",[s("li",[t._v("WebSocket.OPENING (0)：正在建立连接。")]),t._v(" "),s("li",[t._v("WebSocket.OPEN (1)：已经建立连接。")]),t._v(" "),s("li",[t._v("WebSocket.CLOSING (2)：正在关闭连接。")]),t._v(" "),s("li",[t._v("WebSocket.CLOSE (3)：已经关闭连接。")])]),t._v(" "),s("p",[t._v("要关闭 Web Socket 连接，可以在任何时候调用 "),s("code",[t._v("close()")]),t._v(" 方法。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("socket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用了 close() 之后，readyState 的值立即变为 2（正在关闭），而在关闭连接后就会变成")]),t._v("\n")])])]),s("h4",{attrs:{id:"发送和接受数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#发送和接受数据"}},[t._v("#")]),t._v(" 发送和接受数据")]),t._v(" "),s("p",[t._v("要向服务器发送数据，使用 "),s("code",[t._v("send()")]),t._v(" 方法 并传入任意字符串，因为 Web Sockets 只能通过连接发送纯文本数据，所以对于复杂的数据结构，在通过连接发送之前，必须进行序列化。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" message "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("time")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("text")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello world!'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nsocket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringify")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("当服务器向客户端发来消息时，WebSocket 对象就会触发 "),s("code",[t._v("message")]),t._v(" 事件。这个 "),s("code",[t._v("message")]),t._v(" 事件与 其他传递消息的协议类似，也是把返回的数据保存在 "),s("code",[t._v("event.data")]),t._v(" 属性中。")]),t._v(" "),s("h4",{attrs:{id:"其它事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其它事件"}},[t._v("#")]),t._v(" 其它事件")]),t._v(" "),s("p",[t._v("WebSocket 对象还有其他三个事件，在连接生命周期的不同阶段触发。")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("open")]),t._v("：在成功建立连接时触发。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("error")]),t._v("：在发生错误时触发，连接不能持续。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("close")]),t._v("：在连接关闭时触发。该事件事件的 "),s("code",[t._v("event")]),t._v(" 对象有额外的属性："),s("code",[t._v("wasClean")]),t._v("、"),s("code",[t._v("code")]),t._v(" 和 "),s("code",[t._v("reason")]),t._v("。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("wasClean")]),t._v(" 是一个布尔值，表示连接是否已经明确地关闭；")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("code")]),t._v(" 是服务器返回的数值状态码；")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("reason")]),t._v(" 是一个字符串，包含服务器发回的消息。")])]),t._v(" "),s("li",[s("p",[t._v("必须给 WebSocket 构造函数传入绝对 URL。")])]),t._v(" "),s("li",[s("p",[t._v("同源策略对 Web Sockets 不适用，因此可以通过它打开到任何站点的连接  (是否会与某个域中的页面通信，完全取决于服务器)。")])]),t._v(" "),s("li",[s("p",[t._v("WebSocket 对象不支持 DOM2 级事件侦听器，因此必须使用 DOM0 级语法分别定义每个事件处理程序。")])])]),t._v(" "),s("h2",{attrs:{id:"其它技术"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其它技术"}},[t._v("#")]),t._v(" 其它技术")]),t._v(" "),s("p",[t._v("常见的跨域的解决方式上面已经介绍了，接下来来看一些相对我们初级开发人员来说比较冷门或生涩的交互方式。")]),t._v(" "),s("h3",{attrs:{id:"comet"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#comet"}},[t._v("#")]),t._v(" Comet")]),t._v(" "),s("p",[t._v("Comet 指的是一种更高级的 Ajax 技术（经常也有人称为“服务器 推送” ）。它们明显的区别就是 Ajax 是一种从页面向服务器请求数据的技术，而 Comet 则是一种服务器向页面推送数据的技术。")]),t._v(" "),s("p",[t._v("Comet 能够让信息近乎实时地被推送到页面上，非常适合处理体育比赛的分数和股票报价。")]),t._v(" "),s("p",[t._v("有两种实现 Comet 的方式：长轮询和流。长轮询是传统轮询（也称为短轮询）的一个翻版，即浏览器定时向服务器发送请求，看有没有更新的数据。")]),t._v(" "),s("p",[t._v("短轮询的时间线：")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/images/js/short_rotation_training.jpg"),alt:"short_rotation_training"}}),t._v(" "),s("p",[t._v("长轮询把短轮询颠倒了一下。页面发起一个到服务器的请求，然后服务器一直保持连接打开，直到有数据可发送。")]),t._v(" "),s("p",[t._v("发送完数据之后，浏览器关闭连接，随即又发起一个到服务器的新请求。这一过程在页面打开期间一直持续不断。")]),t._v(" "),s("p",[t._v("长轮询的时间线：")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/images/js/long_rotation_training.jpg"),alt:"long_rotation_training"}}),t._v(" "),s("p",[t._v("第二种流行的 Comet 实现是 HTTP 流：浏览器向服务器发送一个请求，而服务器保持连接打开，然后周期性地向浏览器发送数据。")]),t._v(" "),s("h3",{attrs:{id:"服务器发送事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#服务器发送事件"}},[t._v("#")]),t._v(" 服务器发送事件")]),t._v(" "),s("p",[t._v("SSE（Server-Sent Events，服务器发送事件）是围绕只读 Comet 交互推出的 API 或者模式。")]),t._v(" "),s("p",[t._v("SSE API 用于创建到服务器的单向连接，服务器通过这个连接可以发送任意数量的数据。服务器响应的 MIME 类型必须是 "),s("code",[t._v("text/event-stream")]),t._v("，而且是浏览器中的 JavaScript API 能解析格式输出。")]),t._v(" "),s("p",[t._v("SSE 支持短轮询、长轮询和 HTTP 流，而且能在断开连接时自动确定何时重新连接。")]),t._v(" "),s("h4",{attrs:{id:"sse-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sse-api"}},[t._v("#")]),t._v(" SSE API")]),t._v(" "),s("p",[t._v("SSE 的 JavaScript API 与其他传递消息的 JavaScript API 很相似。要预订新的事件流，首先要创建一个新的 EventSource 对象，并传进一个入口点：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" source "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'myevents.php'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("注意，传入的 URL 必须与创建对象的页面同源（相同的 URL 模式、域及端口）。")]),t._v(" "),s("p",[t._v("EventSource 的实例有一个 "),s("code",[t._v("readyState")]),t._v(" 属性，值为 0 表示正连接到服务器，值为 1 表示打开了连接，值为 2 表示关闭 了连接。")]),t._v(" "),s("p",[t._v("另外，还有以下三个事件：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("open")]),t._v("：在建立连接时触发。")]),t._v(" "),s("li",[s("code",[t._v("message")]),t._v("：在从服务器接收到新事件时触发，数据存在于 "),s("code",[t._v("event.data")]),t._v("。")]),t._v(" "),s("li",[s("code",[t._v("error")]),t._v("：在无法建立连接时触发。")])]),t._v(" "),s("h4",{attrs:{id:"时间流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#时间流"}},[t._v("#")]),t._v(" 时间流")]),t._v(" "),s("p",[t._v("所谓的服务器事件会通过一个持久的 HTTP 响应发送，这个响应的 MIME 类型为 "),s("code",[t._v("text/event-stream")]),t._v("。响应的格式是纯文本，最简单的情况是每个数据项都带有前缀 "),s("code",[t._v("data:")]),t._v("。")]),t._v(" "),s("p",[t._v("对于多个连续的以 "),s("code",[t._v("data:")]),t._v(" 开头的数据行，将作为多段数据解析，每个值之间以一个换行符分隔。只有在包含 "),s("code",[t._v("data:")]),t._v(" 的数据行后面有空行时，才会触发 "),s("code",[t._v("message")]),t._v(" 事件。")]),t._v(" "),s("p",[t._v("通过 "),s("code",[t._v("id:")]),t._v(" 前缀可以给特定的事件指定一个关联的 ID，这个 ID 行位于 "),s("code",[t._v("data:")]),t._v(" 行前面或后面皆可：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("data")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" foo\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),s("p",[t._v("设置了 ID 后，EventSource 对象会跟踪上一次触发的事件。如果连接断开，会向服务器发送一个 包含名为 "),s("code",[t._v("Last-Event-ID")]),t._v(" 的特殊 HTTP 头部的请求，以便服务器知道下一次该触发哪个事件。")]),t._v(" "),s("h3",{attrs:{id:"附录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#附录"}},[t._v("#")]),t._v(" 附录")]),t._v(" "),s("p",[t._v("另外还有一些跨域技术，比如设置 "),s("code",[t._v("document.domain")]),t._v(" 进行主域名相同，但子域名不同的 "),s("code",[t._v("iframe")]),t._v(" 跨域 和代理、"),s("code",[t._v("canvas")]),t._v(" 操作图片的跨域等问题。")]),t._v(" "),s("p",[t._v("值得一提的是 HTML5 提供了一个接口 "),s("code",[t._v("window.postMessage()")]),t._v("，以专注实现不同窗口不同页面的跨域通讯。")]),t._v(" "),s("h2",{attrs:{id:"参考资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),s("ul",[s("li",[t._v("JavaScript 高级程序设计(第 3 版)")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/Security/Same-origin_policy",target:"_blank",rel:"noopener noreferrer"}},[t._v("浏览器的同源策略"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://segmentfault.com/a/1190000015597029",target:"_blank",rel:"noopener noreferrer"}},[t._v("不要再问我跨域的问题了"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://segmentfault.com/a/1190000004556040#articleHeader6",target:"_blank",rel:"noopener noreferrer"}},[t._v("聊一聊 cookie"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://harttle.land/2015/08/10/cookie-session.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Cookie/Session 的机制与安全"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.cnblogs.com/TankXiao/archive/2012/03/21/2337194.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Web 安全测试之 XSS"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.zhangxinxu.com/wordpress/2018/02/crossorigin-canvas-getimagedata-cors/",target:"_blank",rel:"noopener noreferrer"}},[t._v("解决 canvas 图片 getImageData,toDataURL 跨域问题"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/postMessage",target:"_blank",rel:"noopener noreferrer"}},[t._v("window.postMessage"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2016/04/cors.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("跨域资源共享 CORS 详解"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=n.exports}}]);